{"version":3,"sources":["src/schedule.png","../src/utils.ts","../src/Date/dateUtils.tsx","../src/Date/DayRange.tsx","../src/Date/Day.tsx","../src/Date/DayName.tsx","../src/Date/DayNames.tsx","../src/Date/CalendarHeader.tsx","../src/Date/Month.tsx","../src/Date/AutoSizer.tsx","../src/Date/Swiper.tsx","../src/Date/SwiperUtils.ts","../src/Date/YearPicker.tsx","../src/Date/Calendar.tsx","../src/Date/AnimatedCrossView.tsx","../src/translations/utils.ts","../src/Date/DatePickerModalHeader.tsx","../src/Date/DatePickerModalContentHeader.tsx","../src/TextInputMask.tsx","../src/Date/inputUtils.ts","../src/Date/DatePickerInput.tsx","../src/Date/CalendarEdit.tsx","../src/Date/DatePickerModalHeaderBackground.tsx","../src/Date/DatePickerModalContent.tsx","../src/Date/DatePickerModal.tsx","../src/Time/timeUtils.ts","../src/Time/AnalogClockHours.tsx","../src/Time/AnimatedClockSwitcher.tsx","../src/Time/AnalogClockMinutes.tsx","../src/Time/AnalogClock.tsx","../src/Time/TimeInput.tsx","../src/Time/AmPmSwitcher.tsx","../src/Time/TimeInputs.tsx","../src/Time/TimePicker.tsx","../src/Time/TimePickerModal.tsx","../src/translations/nl.ts","../src/translations/en.ts","src/App.tsx","src/index.ts","index.js"],"names":["module","exports","useLatest","value","ref","React","current","useHeaderBackgroundColor","theme","useTheme","dark","mode","overlay","colors","surface","primary","useHeaderColorIsLight","background","Color","isLight","useHeaderTextColor","useTextColorOnPrimary","showWeekDay","dayIndex","disableWeekDays","some","di","dateToUnix","d","Math","round","getTime","addMonths","date","count","n","getDate","n2","Date","setDate","setMonth","getMonth","min","getDaysInMonth","year","getFullYear","month","isLeapYear","getFirstDayOfMonth","getDay","useRangeChecker","validRange","validStart","startDate","validEnd","endDate","startUnix","undefined","endUnix","getEndOfDay","validDisabledDatesRef","disabledDates","isWithinValidRange","day","dateUnix","isDateWithinOptionalRange","isDisabled","disabledDate","areDatesOnSameDay","a","b","gridCounts","Array","startAtIndex","getGridCount","index","cHeight","h","daysInMonth","dayOfWeek","ceil","getGridCountForDate","getRealIndex","getInitialIndex","differenceInMonths","firstDate","secondDate","diffMonths","styles","StyleSheet","create","leftRadius","borderBottomLeftRadius","daySize","borderTopLeftRadius","rightRadius","borderBottomRightRadius","borderTopRightRadius","rangeRootBoth","borderRadius","flex1","flex","rangeRoot","flexDirection","leftCrop","rightCrop","inRange","selectColor","bothWays","isCrop","View","pointerEvents","style","absoluteFill","backgroundColor","minWidth","minHeight","EmptyDay","empty","flexBasis","disabled","opacity","root","justifyContent","alignItems","position","button","width","height","overflow","borderWidth","borderColor","props","selected","onPressDate","primaryColor","isToday","textColorOnPrimary","onPress","textColor","TouchableRipple","testID","borderless","Text","color","selectable","dayName","dayNameLabel","fontSize","label","fonts","medium","weekdays","dayNames","locale","shortDayNames","formatter","Intl","DateTimeFormat","weekday","map","format","filter","_","i","key","datePickerHeader","top","right","left","zIndex","buttonContainer","marginTop","marginBottom","buttonWrapper","spacer","scrollMode","onPrev","onNext","isHorizontal","IconButton","icon","monthHeaderSingleMarginTop","monthHeaderSingleMarginBottom","monthHeaderSingleHeight","week","monthHeader","monthLabel","yearButton","alignSelf","marginLeft","yearButtonInner","paddingLeft","opacity0","opacity1","monthGrid","fill","weekGrid","days","getVerticalMonthsOffset","getIndexCount","off","cIndex","weeksOffset","estimatedMonthHeight","getMonthHeight","buttonContainerHeight","getCalendarHeaderHeight","dates","onPressYear","selectingYear","roundness","realIndex","md","y","m","monthName","grid","today","emptyDays","weekIndex","generatedDays","beforeWeekDay","dayOfMonth","afterWeekDay","isFirstDayOfMonth","isLastDayOfMonth","selectedStartDay","selectedEndDay","isDateBetween","safeDates","yesterday","tomorrow","yesterdaySelected","tomorrowSelected","gd","AutoSizer","children","layout","setLayout","onLayout","event","nl","nativeEvent","autoSizer","visibleArray","VerticalScroller","initialIndex","estimatedHeight","renderItem","idx","visibleIndexes","setVisibleIndexes","parentRef","useIsomorphicLayoutEffect","element","scrollTo","setVisibleIndexesThrottled","callback","mounted","latest","timerId","window","cancelAnimationFrame","args","requestAnimationFrame","useDebouncedCallback","onScroll","e","currentTarget","scrollTop","offset","estimatedIndex","difference","floor","getIndexFromVerticalOffset","vi","willChange","transform","start","renderHeader","renderFooter","selectedYear","setIndex","prev","renderProps","onChange","currentIndexRef","onChangeRef","currentIndex","currentDate","setFullYear","newIndex","useYearChange","years","YearPicker","flatList","indexToGo","scrollToOffset","animated","FlatList","list","data","item","Year","keyExtractor","numColumns","yearInner","yearLabel","marginRight","viewPager","dateMode","useMemo","ratio","lightness","darkenBy","hex","lightenBy","setSelectedYear","setSelectingYear","useCallback","startDateRef","endDateRef","datesRef","sd","ed","isStart","exists","newDates","sort","datePressed","change","AnimatedCrossView","collapsed","calendar","calendarEdit","calendarOpacity","Animated","Value","timing","toValue","duration","useNativeDriver","scaleY","interpolate","inputRange","outputRange","scaleX","scale","translationsPerLocale","getTranslation","fallback","l","translationForLocale","console","warn","translation","registerTranslation","translations","DatePickerModalHeader","disableSafeTop","saveLabel","SafeAreaView","safeContent","safeContentNoTop","Appbar","appbarHeader","Action","onDismiss","Content","title","Button","onSave","paddingBottom","elevation","paddingTop","header","paddingRight","headerContentContainer","letterSpacing","singleHeaderText","rangeHeaderText","headerTextFilled","headerTextEmpty","headerSeparator","DatePickerModalContentHeader","onToggle","moreLabel","configuredLabel","getLabel","allowEditing","toUpperCase","HeaderContentRange","HeaderContentSingle","HeaderContentMulti","state","emptyLabel","lighterColor","fade","rgb","toString","dateColor","dateCount","length","join","startLabel","endLabel","startColor","endColor","excludeInRangeHeaderText","excludeInRangeHeaderTextSmall","column","row","splitCharacters","enhanceTextWithMask","text","mask","previousValue","isBackSpace","splitCharacter","find","ch","includes","detectCharacter","maskParts","split","textParts","finalString","maskPartIndex","partString","maskPart","textPart","maskDigitIndex","currentCharacter","character","push","lastPart","lastMaskPart","onChangeText","rest","controlledValue","setControlledValue","TextInput","enhancedText","useDateInput","inputMode","error","setError","useInputFormatter","inputFormat","replace","useInputFormat","formattedValue","indexOf","monthIndex","yearIndex","Number","slice","isNaN","finalDate","errors","withDateFormatInLabel","flexGrow","input","calendarButton","withModal","visible","setVisible","onInnerConfirm","keyboardType","placeholder","keyboardAppearance","size","HelperText","type","onConfirm","padding","inner","inputContainer","separator","dateInput","startInput","endInput","Keyboard","dismiss","inputsToFocus","inputsToBlur","forEach","ip","blur","focus","onSubmitStartInput","onSubmitEndInput","onSubmitInput","onSubmitEditing","returnKeyType","DatePickerModalHeaderBackground","anyProps","setState","setCollapsed","onInnerChange","params","onToggleCollapse","supportedOrientations","modalRoot","modalBackground","modalContent","modalContentBig","maxWidth","maxHeight","dimensions","useWindowDimensions","animationType","disableStatusBar","disableStatusBarPadding","animationTypeCalculated","Platform","select","web","default","headerBackgroundColor","Modal","transparent","onRequestClose","presentationStyle","statusBarTranslucent","TouchableWithoutFeedback","backdrop","StatusBar","translucent","barStyle","currentHeight","hourTypes","inputTypes","reverseInputTypes","keyboard","picker","inputTypeIcons","clockTypes","_30","PI","_12","_360","_90","snap","angle","step","diff","toHourInputFormat","hours","is24Hour","toHourOutputFormat","newHours","previousHours","outerHourRoot","outerHourInner","innerHourRoot","innerHourInner","innerHourText","getHourNumbers","arrayLength","radius","x","cos","sin","DisplayModeContext","outerRange","innerRange","AnimatedClockSwitcher","focused","minutes","animatedCollapsed","textWhite","range","getMinuteNumbers","currentMinutes","isZero","isCurrent","clock","circleSize","middlePoint","center","endPoint","bottom","line","returnTrue","shortPointer","clockRef","hoursRef","minutesRef","focusedRef","is24HourRef","modeRef","onPointerMove","final","atan","getAngle","locationX","locationY","hours24","pickedHours","handAngle","hourType","hour","parseInt","toFixed","getHours","getHourType","pickedMinutes","minute","getMinutes","panResponder","PanResponder","onPanResponderGrant","onPanResponderMove","onPanResponderRelease","onStartShouldSetPanResponder","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderTerminationRequest","onShouldBlockNativeResponder","dynamicSize","pointerNumber","degreesPerNumber","panHandlers","lighten","darken","cursor","rotate","translateX","textAlign","textAlignVertical","buttonOverlay","clockType","pressed","onChanged","inputType","inputFocused","setInputFocused","highlighted","useInputColors","maxLength","onFocus","onBlur","rippleColor","AmPmSwitcher","setMode","isAM","SwitchButton","switchSeparator","useSwitchColors","switchButton","accessibilityLabel","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityState","switchButtonInner","spaceBetweenInputsAndSwitcher","inputContainerLandscape","hoursAndMinutesSeparator","spaceDot","dot","betweenDot","onFocusInput","isLandscape","onChangeHours","blurOnSubmit","newHoursFromInput","newMinutesFromInput","newMinutes","rootLandscape","rootPortrait","clockContainer","displayMode","setDisplayMode","timeZone","UTC","Provider","keyboardView","shadowColor","shadowOffset","shadowOpacity","shadowRadius","labelContainer","timePickerContainer","inputTypeToggle","margin","cancelLabel","confirmLabel","setInputType","setFocused","localHours","setLocalHours","localMinutes","setLocalMinutes","KeyboardAvoidingView","behavior","save","selectSingle","selectMultiple","selectRange","notAccordingToDateFormat","mustBeHigherThan","mustBeLowerThan","mustBeBetween","dateIsDisabled","en","App","dateFormatter","timeFormatter","hour12","inputDate","setInputDate","setDates","setRange","time","setTime","timeOpen","setTimeOpen","rangeOpen","setRangeOpen","singleOpen","setSingleOpen","customOpen","setCustomOpen","onDismissTime","multiOpen","setMultiOpen","onDismissRange","onDismissSingle","onDismissMulti","onDismissCustom","onChangeRange","onChangeSingle","onChangeMulti","log","onConfirmTime","timeDate","setHours","setMinutes","pastDate","futureDate","ScrollView","content","titleContainer","Image","source","require","logo","Title","Paragraph","Linking","openURL","underline","uppercase","twitterButton","TwitterFollowButton","userName","contentShadow","Row","Label","Boolean","Enter","buttons","pickButton","buttonSeparator","Portal","customModal","enter","textDecorationLine","contentInline","switchContainer","switchSpace","switchLabel","flexWrap","useColorScheme","DarkTheme","DefaultTheme","registerRootComponent","Index"],"mappings":"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","file":"static/js/app.b434a5d8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/schedule.6cc9a4e3.png\";","import * as React from 'react'\nimport { overlay, useTheme } from 'react-native-paper'\nimport Color from 'color'\n\nexport function useLatest<T>(value: T) {\n  const ref = React.useRef(value)\n  ref.current = value\n  return ref\n}\n\nexport function useHeaderBackgroundColor() {\n  const theme = useTheme()\n  return theme.dark && theme.mode === 'adaptive'\n    ? overlay(4, theme.colors.surface)\n    : theme.colors.primary\n}\n\nexport function useHeaderColorIsLight() {\n  const theme = useTheme()\n  const background =\n    theme.dark && theme.mode === 'adaptive'\n      ? theme.colors.surface\n      : theme.colors.primary\n  return Color(background).isLight()\n}\n\nexport function useHeaderTextColor() {\n  const isLight = useHeaderColorIsLight()\n  return !isLight ? '#fff' : '#000'\n}\n\nexport function useTextColorOnPrimary() {\n  const theme = useTheme()\n  const isDark = !Color(theme.colors.primary).isLight()\n  return isDark ? '#fff' : '#000'\n}\n\nexport function range(start: number, end: number) {\n  return Array(end - start + 1)\n    .fill(null)\n    .map((_, i) => start + i)\n}\n\nexport function lightenBy(color: Color, ratio: number) {\n  const lightness = color.lightness()\n  return color.lightness(lightness + (100 - lightness) * ratio)\n}\n\nexport function darkenBy(color: Color, ratio: number) {\n  const lightness = color.lightness()\n  return color.lightness(lightness - lightness * ratio)\n}\n","import * as React from 'react'\nimport { useLatest } from '../utils'\nimport type { ValidRangeType } from './Calendar'\n\nexport type DisableWeekDaysType = number[]\n\nexport function showWeekDay(\n  dayIndex: number,\n  disableWeekDays?: DisableWeekDaysType\n): boolean {\n  return !(disableWeekDays && disableWeekDays.some((di) => di === dayIndex))\n}\n\nexport function dateToUnix(d: Date): number {\n  return Math.round(d.getTime() / 1000)\n}\n\nexport function addMonths(date: Date, count: number) {\n  let n = date.getDate()\n  let n2 = new Date(date.getTime())\n  n2.setDate(1)\n  n2.setMonth(n2.getMonth() + count)\n  n2.setDate(\n    Math.min(\n      n,\n      getDaysInMonth({ year: n2.getFullYear(), month: n2.getMonth() })\n    )\n  )\n\n  return n2\n}\n\n// https://stackoverflow.com/a/1185068/2508481\n// pass in any date as parameter anyDateInMonth based on dayjs\nexport function getDaysInMonth({\n  year,\n  month,\n}: {\n  year: number\n  month: number\n}): number {\n  return [\n    31,\n    isLeapYear({ year }) ? 29 : 28,\n    31,\n    30,\n    31,\n    30,\n    31,\n    31,\n    30,\n    31,\n    30,\n    31,\n  ][month]\n}\n\nexport function getFirstDayOfMonth({\n  year,\n  month,\n}: {\n  year: number\n  month: number\n}): number {\n  return new Date(year, month, 1).getDay()\n}\n\nexport function useRangeChecker(validRange: ValidRangeType | undefined) {\n  const validStart = validRange?.startDate\n  const validEnd = validRange?.endDate\n  const startUnix =\n    validStart instanceof Date\n      ? dateToUnix(getStartOfDay(validStart))\n      : undefined\n\n  const endUnix =\n    validEnd instanceof Date ? dateToUnix(getEndOfDay(validEnd)) : undefined\n\n  const validDisabledDatesRef = useLatest(validRange?.disabledDates)\n\n  const isWithinValidRange = React.useCallback(\n    (day: Date) => {\n      return isDateWithinOptionalRange(day, {\n        startUnix: startUnix,\n        endUnix: endUnix,\n      })\n    },\n    [startUnix, endUnix]\n  )\n\n  const isDisabled = React.useCallback(\n    (day: Date) => {\n      return validDisabledDatesRef.current\n        ? validDisabledDatesRef.current.some((disabledDate) =>\n            areDatesOnSameDay(disabledDate, day)\n          )\n        : false\n    },\n    [validDisabledDatesRef]\n  )\n\n  return { isDisabled, isWithinValidRange, validStart, validEnd }\n}\n\nexport function areDatesOnSameDay(a: Date, b?: Date | null | undefined) {\n  if (!b) {\n    return false\n  }\n\n  return (\n    a.getFullYear() === b.getFullYear() &&\n    a.getMonth() === b.getMonth() &&\n    a.getDate() === b.getDate()\n  )\n}\n\nexport function isDateBetween(\n  date: Date,\n  {\n    startDate,\n    endDate,\n  }: {\n    startDate?: Date | null | undefined\n    endDate?: Date | null | undefined\n  }\n): boolean {\n  if (!startDate || !endDate) {\n    return false\n  }\n  return date <= endDate && date >= startDate\n}\n\n/**\n * Check if a date is within an optional range.\n *\n * If the range doesn't exist, it defaults to `true`.\n */\nexport function isDateWithinOptionalRange(\n  date: Date,\n  {\n    startUnix,\n    endUnix,\n  }: { startUnix: number | undefined; endUnix: number | undefined }\n) {\n  const dateUnix = dateToUnix(date)\n  // if startUnix is provided and date is before start\n  if (startUnix && dateUnix < startUnix) {\n    return false\n  }\n\n  // if endUnix is provided and date is after end\n  if (endUnix && dateUnix > endUnix) {\n    return false\n  }\n\n  return true\n}\n\nexport function isLeapYear({ year }: { year: number }) {\n  return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0\n}\n\nexport const daySize = 46\nexport const estimatedMonthHeight = 360\nexport const startAtIndex = 1200\nexport const totalMonths = startAtIndex * 2\nexport const beginOffset = estimatedMonthHeight * startAtIndex\nexport const gridCounts = new Array<number | undefined>(totalMonths)\n\nexport function getGridCount(index: number) {\n  const cHeight = gridCounts[index]\n  if (cHeight) {\n    return cHeight\n  }\n  const monthDate = addMonths(new Date(), getRealIndex(index))\n  const h = getGridCountForDate(monthDate)\n  gridCounts[index] = h\n  return h\n}\n\nexport function getGridCountForDate(date: Date) {\n  const year = date.getFullYear()\n  const month = date.getMonth()\n  const daysInMonth = getDaysInMonth({ year, month })\n  const dayOfWeek = getFirstDayOfMonth({ year, month })\n  return Math.ceil((daysInMonth + dayOfWeek) / 7)\n}\n\nexport function getRealIndex(index: number) {\n  return index - startAtIndex\n}\n\nexport function getInitialIndex(date: Date | undefined) {\n  if (!date) {\n    return startAtIndex\n  }\n\n  const today = new Date()\n  const months = differenceInMonths(today, date)\n\n  return startAtIndex + months\n}\n\nexport function useInputFormatter({ locale }: { locale: string | undefined }) {\n  return React.useMemo(() => {\n    return new Intl.DateTimeFormat(locale, {\n      month: '2-digit',\n      day: '2-digit',\n      year: 'numeric',\n    })\n  }, [locale])\n}\nexport function getStartOfDay(d: Date): Date {\n  return new Date(d.getFullYear(), d.getMonth(), d.getDate(), 0, 0, 0)\n}\nexport function getEndOfDay(d: Date): Date {\n  return new Date(d.getFullYear(), d.getMonth(), d.getDate(), 23, 59, 59)\n}\nexport function useInputFormat({\n  formatter,\n}: {\n  formatter: Intl.DateTimeFormat\n}) {\n  return React.useMemo(() => {\n    // TODO: something cleaner and more universal?\n    const inputDate = formatter.format(new Date(2020, 10 - 1, 1))\n    return inputDate\n      .replace('2020', 'YYYY')\n      .replace('10', 'MM')\n      .replace('01', 'DD')\n  }, [formatter])\n}\n\nexport function differenceInMonths(firstDate: Date, secondDate: Date) {\n  let diffMonths = (secondDate.getFullYear() - firstDate.getFullYear()) * 12\n  diffMonths -= firstDate.getMonth()\n  diffMonths += secondDate.getMonth()\n  return diffMonths\n}\n","import * as React from 'react'\nimport { StyleSheet, View } from 'react-native'\nimport { daySize } from './dateUtils'\n\nfunction DayRange({\n  leftCrop,\n  rightCrop,\n  inRange,\n  selectColor,\n}: {\n  leftCrop: boolean\n  rightCrop: boolean\n  inRange: boolean\n  selectColor: string\n}) {\n  const bothWays = inRange && leftCrop && rightCrop\n  const isCrop = inRange && (leftCrop || rightCrop) && !(leftCrop && rightCrop)\n\n  if (inRange || isCrop) {\n    return (\n      <View\n        pointerEvents=\"none\"\n        style={[\n          StyleSheet.absoluteFill,\n          styles.rangeRoot,\n          bothWays && styles.rangeRootBoth,\n          inRange && !isCrop\n            ? {\n                backgroundColor: selectColor,\n              }\n            : null,\n        ]}\n      >\n        {isCrop && (\n          <>\n            <View\n              style={[\n                styles.flex1,\n                rightCrop\n                  ? {\n                      backgroundColor: selectColor,\n                    }\n                  : null,\n              ]}\n            />\n            <View\n              style={[\n                {\n                  backgroundColor: selectColor,\n                  minWidth: daySize,\n                  minHeight: daySize,\n                },\n                leftCrop ? styles.leftRadius : null,\n                rightCrop ? styles.rightRadius : null,\n              ]}\n            />\n            <View\n              style={[\n                styles.flex1,\n                leftCrop\n                  ? {\n                      backgroundColor: selectColor,\n                    }\n                  : null,\n              ]}\n            />\n          </>\n        )}\n      </View>\n    )\n  }\n  return null\n}\n\nconst styles = StyleSheet.create({\n  leftRadius: {\n    borderBottomLeftRadius: daySize / 2,\n    borderTopLeftRadius: daySize / 2,\n  },\n  rightRadius: {\n    borderBottomRightRadius: daySize / 2,\n    borderTopRightRadius: daySize / 2,\n  },\n  rangeRootBoth: {\n    borderRadius: daySize / 2,\n  },\n  flex1: {\n    flex: 1,\n  },\n  rangeRoot: {\n    flexDirection: 'row',\n  },\n})\n\nexport default React.memo(DayRange)\n","import * as React from 'react'\nimport { DarkTheme, Text, TouchableRipple } from 'react-native-paper'\nimport { StyleSheet, View } from 'react-native'\nimport DayRange from './DayRange'\nimport { daySize } from './dateUtils'\n\nfunction EmptyDayPure() {\n  return <View style={styles.empty} />\n}\nexport const EmptyDay = React.memo(EmptyDayPure)\n\nfunction Day(props: {\n  theme: typeof DarkTheme\n  textColorOnPrimary: string\n  day: number\n  month: number\n  year: number\n  selected: boolean\n  inRange: boolean\n  leftCrop: boolean\n  rightCrop: boolean\n  primaryColor: string\n  selectColor: string\n  isToday: boolean\n  disabled: boolean\n  onPressDate: (date: Date) => any\n}) {\n  const {\n    day,\n    month,\n    year,\n    selected,\n    inRange,\n    leftCrop,\n    rightCrop,\n    onPressDate,\n    primaryColor,\n    selectColor,\n    isToday,\n    disabled,\n    textColorOnPrimary,\n    theme,\n  } = props\n  // console.log(month, { day })\n  const onPress = React.useCallback(() => {\n    onPressDate(new Date(year, month, day))\n  }, [onPressDate, year, month, day])\n\n  const borderColor =\n    selected || (inRange && theme.dark)\n      ? textColorOnPrimary\n      : theme.dark\n      ? '#fff'\n      : '#000'\n  const textColor =\n    selected || (inRange && theme.dark) ? textColorOnPrimary : undefined\n\n  return (\n    <View style={[styles.root, disabled && styles.disabled]}>\n      <DayRange\n        inRange={inRange}\n        leftCrop={leftCrop}\n        rightCrop={rightCrop}\n        selectColor={selectColor}\n      />\n\n      <TouchableRipple\n        testID={`react-native-paper-dates-day-${year}-${month}-${day}`}\n        disabled={disabled}\n        borderless={true}\n        onPress={disabled ? undefined : onPress}\n        style={[\n          styles.button,\n          { backgroundColor: inRange ? selectColor : undefined },\n        ]}\n      >\n        <View\n          style={[\n            styles.day,\n            isToday ? { borderColor: borderColor } : null,\n            selected ? { backgroundColor: primaryColor } : null,\n          ]}\n        >\n          <Text\n            style={textColor ? { color: textColor } : undefined}\n            selectable={false}\n          >\n            {day}\n          </Text>\n        </View>\n      </TouchableRipple>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  empty: {\n    flex: 1,\n    flexBasis: 0,\n  },\n  disabled: {\n    opacity: 0.3,\n  },\n  root: {\n    flexBasis: 0,\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'relative',\n  },\n  button: {\n    width: daySize,\n    height: daySize,\n    overflow: 'hidden',\n    borderRadius: daySize / 2,\n  },\n  day: {\n    flexBasis: 0,\n    flex: 1,\n    borderRadius: daySize / 2,\n    width: daySize,\n    height: daySize,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: 'transparent',\n  },\n  flex1: {\n    flex: 1,\n  },\n})\n\nexport default React.memo(Day)\n","import * as React from 'react'\nimport { StyleSheet, View } from 'react-native'\nimport { Text, useTheme } from 'react-native-paper'\n\nfunction DayName({ label }: { label: string }) {\n  const theme = useTheme()\n  return (\n    <View style={styles.dayName}>\n      <Text\n        style={[styles.dayNameLabel, theme.fonts.medium]}\n        selectable={false}\n      >\n        {label}\n      </Text>\n    </View>\n  )\n}\nconst styles = StyleSheet.create({\n  dayName: { flex: 1, alignItems: 'center' },\n  dayNameLabel: { fontSize: 14, opacity: 0.7 },\n})\nexport default React.memo(DayName)\n","import * as React from 'react'\nimport { StyleSheet, View } from 'react-native'\nimport DayName from './DayName'\nimport { useTheme } from 'react-native-paper'\nimport { DisableWeekDaysType, showWeekDay } from './dateUtils'\n\nexport const dayNamesHeight = 44\n\n// TODO: wait for a better Intl api ;-)\nconst weekdays = [\n  new Date(2020, 7, 2),\n  new Date(2020, 7, 3),\n  new Date(2020, 7, 4),\n  new Date(2020, 7, 5),\n  new Date(2020, 7, 6),\n  new Date(2020, 7, 7),\n  new Date(2020, 7, 8),\n]\n\nfunction DayNames({\n  disableWeekDays,\n  locale,\n}: {\n  locale: undefined | string\n  disableWeekDays?: DisableWeekDaysType\n}) {\n  const theme = useTheme()\n  const shortDayNames = React.useMemo<string[]>(() => {\n    const formatter = new Intl.DateTimeFormat(locale, {\n      weekday: 'narrow',\n    })\n    return weekdays.map((date) => formatter.format(date))\n  }, [locale])\n\n  return (\n    <View\n      style={[styles.dayNames, { backgroundColor: theme.colors.surface }]}\n      pointerEvents={'none'}\n    >\n      {shortDayNames\n        .filter((_, dayIndex) => showWeekDay(dayIndex, disableWeekDays))\n        .map((dayName, i) => (\n          <DayName key={`${dayName}_${i}`} label={dayName} />\n        ))}\n    </View>\n  )\n}\nconst styles = StyleSheet.create({\n  dayNames: {\n    height: dayNamesHeight,\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#fff',\n  },\n})\nexport default React.memo(DayNames)\n","import * as React from 'react'\nimport { StyleSheet, View } from 'react-native'\nimport { IconButton, useTheme } from 'react-native-paper'\nimport DayNames, { dayNamesHeight } from './DayNames'\nimport type { DisableWeekDaysType } from './dateUtils'\n\nconst buttonContainerHeight = 56\nconst buttonContainerMarginTop = 4\nconst buttonContainerMarginBottom = 8\n\nexport function getCalendarHeaderHeight(scrollMode: 'horizontal' | 'vertical') {\n  if (scrollMode === 'horizontal') {\n    return (\n      buttonContainerHeight +\n      buttonContainerMarginTop +\n      buttonContainerMarginBottom +\n      dayNamesHeight\n    )\n  }\n  return dayNamesHeight\n}\n\nfunction CalendarHeader({\n  scrollMode,\n  onPrev,\n  onNext,\n  disableWeekDays,\n  locale,\n}: {\n  locale: undefined | string\n  scrollMode: 'horizontal' | 'vertical'\n  onPrev: () => any\n  onNext: () => any\n  disableWeekDays?: DisableWeekDaysType\n}) {\n  const theme = useTheme()\n  const isHorizontal = scrollMode === 'horizontal'\n  return (\n    <View style={styles.datePickerHeader} pointerEvents={'box-none'}>\n      {isHorizontal ? (\n        <View style={styles.buttonContainer} pointerEvents={'box-none'}>\n          <View style={styles.spacer} pointerEvents={'box-none'} />\n          <View\n            style={[\n              styles.buttonWrapper,\n              { backgroundColor: theme.colors.surface },\n            ]}\n          >\n            <IconButton icon=\"chevron-left\" onPress={onPrev} />\n          </View>\n\n          <View\n            style={[\n              styles.buttonWrapper,\n              { backgroundColor: theme.colors.surface },\n            ]}\n          >\n            <IconButton icon=\"chevron-right\" onPress={onNext} />\n          </View>\n        </View>\n      ) : null}\n      <DayNames disableWeekDays={disableWeekDays} locale={locale} />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  datePickerHeader: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    left: 0,\n    zIndex: 10,\n  },\n  buttonContainer: {\n    height: buttonContainerHeight,\n    marginTop: buttonContainerMarginTop,\n    marginBottom: buttonContainerMarginBottom,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  buttonWrapper: {},\n  spacer: { flex: 1 },\n})\n\nexport default React.memo(CalendarHeader)\n","import * as React from 'react'\nimport { StyleSheet, View } from 'react-native'\nimport { IconButton, Text, useTheme, TouchableRipple } from 'react-native-paper'\nimport Day, { EmptyDay } from './Day'\n\nimport {\n  addMonths,\n  areDatesOnSameDay,\n  daySize,\n  DisableWeekDaysType,\n  getDaysInMonth,\n  getFirstDayOfMonth,\n  getRealIndex,\n  getGridCount,\n  isDateBetween,\n  gridCounts,\n  showWeekDay,\n  startAtIndex,\n  beginOffset,\n  estimatedMonthHeight,\n  useRangeChecker,\n} from './dateUtils'\nimport { getCalendarHeaderHeight } from './CalendarHeader'\nimport type {\n  CalendarDate,\n  CalendarDates,\n  ModeType,\n  ValidRangeType,\n} from './Calendar'\nimport { dayNamesHeight } from './DayNames'\nimport { useTextColorOnPrimary } from '../utils'\n\ninterface BaseMonthProps {\n  locale: undefined | string\n  scrollMode: 'horizontal' | 'vertical'\n  disableWeekDays?: DisableWeekDaysType\n  mode: ModeType\n  index: number\n  onPressYear: (year: number) => any\n  selectingYear: boolean\n  onPressDate: (date: Date) => any\n  primaryColor: string\n  selectColor: string\n  roundness: number\n  validRange?: ValidRangeType\n\n  // some of these should be required in final implementation\n  startDate?: CalendarDate\n  endDate?: CalendarDate\n  date?: CalendarDate\n  dates?: CalendarDates\n}\n\ninterface MonthRangeProps extends BaseMonthProps {\n  mode: 'range'\n  startDate: CalendarDate\n  endDate: CalendarDate\n}\n\ninterface MonthSingleProps extends BaseMonthProps {\n  mode: 'single'\n  date: CalendarDate\n}\n\ninterface MonthMultiProps extends BaseMonthProps {\n  mode: 'multiple'\n  dates: CalendarDates\n}\n\nfunction Month(props: MonthSingleProps | MonthRangeProps | MonthMultiProps) {\n  const {\n    index,\n    mode,\n    date,\n    dates,\n    startDate,\n    endDate,\n    onPressYear,\n    selectingYear,\n    onPressDate,\n    scrollMode,\n    primaryColor,\n    selectColor,\n    roundness,\n    disableWeekDays,\n    locale,\n    validRange,\n  } = props\n  const theme = useTheme()\n  const textColorOnPrimary = useTextColorOnPrimary()\n  const realIndex = getRealIndex(index)\n  const isHorizontal = scrollMode === 'horizontal'\n  const { isDisabled, isWithinValidRange } = useRangeChecker(validRange)\n  const { monthName, month, year } = React.useMemo(() => {\n    const md = addMonths(new Date(), realIndex)\n    const y = md.getFullYear()\n    const m = md.getMonth()\n    const formatter = new Intl.DateTimeFormat(locale, {\n      month: 'long',\n    })\n    return { monthName: formatter.format(md), month: m, year: y }\n  }, [realIndex, locale])\n\n  const grid = React.useMemo(() => {\n    const today = new Date()\n\n    const daysInMonth = getDaysInMonth({ year, month })\n    const dayOfWeek = getFirstDayOfMonth({ year, month })\n    const emptyDays = dayOfWeek\n\n    return monthGrid(index).map(({ days, weekGrid }) => {\n      return {\n        weekIndex: weekGrid,\n        generatedDays: days.map((_, dayIndex) => {\n          const isFirstWeek = weekGrid === 0\n          const realDayIndex = emptyDays - dayIndex\n          const beforeWeekDay = isFirstWeek && realDayIndex > 0\n          const dayOfMonth = weekGrid * 7 + dayIndex - emptyDays + 1\n          const afterWeekDay = dayOfMonth > daysInMonth\n\n          const day = new Date(year, month, dayOfMonth)\n          const isToday = areDatesOnSameDay(day, today)\n\n          let inRange = false\n          let disabled = isDisabled(day)\n          let selected = false\n\n          let leftCrop = dayOfMonth === 1\n          let rightCrop = dayOfMonth === daysInMonth\n\n          const isFirstDayOfMonth = dayOfMonth === 1\n          const isLastDayOfMonth = dayOfMonth === daysInMonth\n\n          if (mode === 'range') {\n            const selectedStartDay = areDatesOnSameDay(day, startDate)\n            const selectedEndDay = areDatesOnSameDay(day, endDate)\n            selected = selectedStartDay || selectedEndDay\n            inRange = isDateBetween(day, {\n              startDate,\n              endDate,\n            })\n            if (selectedStartDay) {\n              leftCrop = true\n            }\n            if (selectedEndDay) {\n              rightCrop = true\n            }\n            if (dayIndex === 0 && !selectedStartDay) {\n              leftCrop = false\n            }\n\n            if (dayIndex === 6 && !selectedEndDay) {\n              rightCrop = false\n            }\n\n            if (\n              (isFirstDayOfMonth && selectedEndDay) ||\n              (isLastDayOfMonth && selectedStartDay)\n            ) {\n              inRange = false\n            }\n          } else if (mode === 'multiple') {\n            const safeDates = dates || []\n            selected = safeDates.some((d) => areDatesOnSameDay(day, d))\n\n            const yesterday = new Date(year, month, dayOfMonth - 1)\n            const tomorrow = new Date(year, month, dayOfMonth + 1)\n\n            const yesterdaySelected = safeDates.some((d) =>\n              areDatesOnSameDay(d, yesterday)\n            )\n            const tomorrowSelected = safeDates.some((d) =>\n              areDatesOnSameDay(d, tomorrow)\n            )\n\n            if (selected) {\n              if (tomorrowSelected && yesterdaySelected) {\n                inRange = true\n              }\n              if (tomorrowSelected && !yesterdaySelected) {\n                inRange = true\n                leftCrop = true\n              }\n\n              if (yesterdaySelected && !tomorrowSelected) {\n                inRange = true\n                rightCrop = true\n              }\n\n              if (isFirstDayOfMonth && !tomorrowSelected) {\n                inRange = false\n              }\n\n              if (isLastDayOfMonth && !yesterdaySelected) {\n                inRange = false\n              }\n\n              if (inRange && !leftCrop && !rightCrop) {\n                selected = false\n              }\n            }\n          } else if (mode === 'single') {\n            selected = areDatesOnSameDay(day, date)\n          }\n\n          const isWithinOptionalValidRange = isWithinValidRange(day)\n\n          if (inRange && !disabled) {\n            disabled = false\n          }\n\n          if (!isWithinOptionalValidRange) {\n            disabled = true\n          }\n\n          return {\n            beforeWeekDay,\n            afterWeekDay,\n            year,\n            month,\n            dayOfMonth,\n            dayIndex,\n            mode,\n            selected,\n            inRange,\n            leftCrop,\n            rightCrop,\n            isToday,\n            disabled,\n          }\n        }),\n      }\n    })\n  }, [\n    year,\n    month,\n    index,\n    isDisabled,\n    mode,\n    isWithinValidRange,\n    startDate,\n    endDate,\n    dates,\n    date,\n  ])\n\n  return (\n    <View style={[styles.month, { height: getMonthHeight(scrollMode, index) }]}>\n      <View\n        style={[\n          styles.monthHeader,\n          isHorizontal\n            ? {\n                marginTop: monthHeaderSingleMarginTop,\n                marginBottom: monthHeaderSingleMarginBottom,\n              }\n            : null,\n        ]}\n      >\n        <TouchableRipple\n          disabled={!isHorizontal}\n          onPress={isHorizontal ? () => onPressYear(year) : undefined}\n          style={[\n            styles.yearButton,\n            {\n              borderRadius: roundness,\n            },\n          ]}\n        >\n          <View\n            style={[\n              styles.yearButtonInner,\n              {\n                borderRadius: roundness,\n              },\n            ]}\n          >\n            <Text\n              style={[styles.monthLabel, theme.fonts.medium]}\n              selectable={false}\n            >\n              {monthName} {year}\n            </Text>\n            <View style={isHorizontal ? styles.opacity1 : styles.opacity0}>\n              <IconButton\n                onPress={isHorizontal ? () => onPressYear(year) : undefined}\n                icon={selectingYear ? 'chevron-up' : 'chevron-down'}\n              />\n            </View>\n          </View>\n        </TouchableRipple>\n      </View>\n\n      {grid.map(({ weekIndex, generatedDays }) => (\n        <View style={styles.week} key={weekIndex}>\n          {generatedDays\n            .filter((gd) => showWeekDay(gd.dayIndex, disableWeekDays))\n            .map((gd) =>\n              gd.beforeWeekDay || gd.afterWeekDay ? (\n                <EmptyDay key={gd.dayIndex} />\n              ) : (\n                <Day\n                  key={gd.dayIndex}\n                  theme={theme}\n                  day={gd.dayOfMonth}\n                  month={gd.month}\n                  year={gd.year}\n                  selected={gd.selected}\n                  inRange={gd.inRange}\n                  leftCrop={gd.leftCrop}\n                  rightCrop={gd.rightCrop}\n                  onPressDate={onPressDate}\n                  isToday={gd.isToday}\n                  selectColor={selectColor}\n                  primaryColor={primaryColor}\n                  disabled={gd.disabled}\n                  textColorOnPrimary={textColorOnPrimary}\n                />\n              )\n            )}\n        </View>\n      ))}\n    </View>\n  )\n}\n\nexport const weekMargin = 6\nexport const weekSize = daySize + weekMargin\nexport const montHeaderHeight = 56\nexport const monthHeaderSingleMarginTop = 4\nexport const monthHeaderSingleMarginBottom = 8 + 44 + 12\nexport const monthHeaderSingleHeight =\n  monthHeaderSingleMarginTop + monthHeaderSingleMarginBottom\n\nconst styles = StyleSheet.create({\n  week: {\n    flexDirection: 'row',\n    marginBottom: weekMargin,\n    height: daySize,\n  },\n\n  month: {},\n\n  monthHeader: {\n    height: montHeaderHeight,\n    justifyContent: 'center',\n    overflow: 'hidden',\n  },\n  monthLabel: { fontSize: 14, opacity: 0.7 },\n  yearButton: { alignSelf: 'flex-start', marginLeft: 6 },\n  yearButtonInner: {\n    paddingLeft: 16,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  opacity0: { opacity: 0 },\n  opacity1: { opacity: 1 },\n})\n\nconst monthGrid = (index: number) => {\n  return Array(getGridCount(index))\n    .fill(null)\n    .map((_, weekGrid) => {\n      const days = Array(7).fill(null)\n      return { weekGrid, days }\n    })\n}\n\nfunction getIndexCount(index: number): number {\n  if (index > startAtIndex) {\n    return index - startAtIndex\n  }\n\n  return -(startAtIndex - index)\n}\n\nfunction weeksOffset(index: number): number {\n  if (index === startAtIndex) {\n    return 0\n  }\n  let off = 0\n  if (index > startAtIndex) {\n    for (let i = 0; i < index - startAtIndex; i++) {\n      const cIndex = startAtIndex + i\n      off += gridCounts[cIndex] || getGridCount(cIndex)\n    }\n  } else {\n    for (let i = 0; i < startAtIndex - index; i++) {\n      const cIndex = startAtIndex - i - 1\n      off -= gridCounts[cIndex] || getGridCount(cIndex)\n    }\n  }\n  return off\n}\n\nexport function getIndexFromHorizontalOffset(\n  offset: number,\n  width: number\n): number {\n  return startAtIndex + Math.floor(offset / width)\n}\n\nexport function getIndexFromVerticalOffset(offset: number): number {\n  let estimatedIndex = startAtIndex + Math.ceil(offset / estimatedMonthHeight)\n\n  const realOffset = getVerticalMonthsOffset(estimatedIndex)\n  const difference = (realOffset - beginOffset - offset) / estimatedMonthHeight\n  if (difference >= 1 || difference <= -1) {\n    estimatedIndex -= Math.floor(difference)\n  }\n  return estimatedIndex\n}\n\nexport function getHorizontalMonthOffset(index: number, width: number) {\n  if (index < 0) {\n    return 0\n  }\n  return width * index\n}\n\nexport function getVerticalMonthsOffset(index: number) {\n  const count = getIndexCount(index)\n  const ob = weeksOffset(index)\n  const monthsHeight = weekSize * ob\n  const c = monthsHeight + count * (dayNamesHeight + montHeaderHeight)\n\n  return (c || 0) + beginOffset\n}\n\nexport function getMonthHeight(\n  scrollMode: 'horizontal' | 'vertical',\n  index: number\n): number {\n  const calendarHeight = getCalendarHeaderHeight(scrollMode)\n  const gc = getGridCount(index)\n\n  const currentMonthHeight = weekSize * gc\n  const extraHeight =\n    scrollMode === 'horizontal' ? monthHeaderSingleHeight : montHeaderHeight\n  const c = calendarHeight + currentMonthHeight + extraHeight\n  return c || 0\n}\n\nexport default React.memo(Month)\n","import * as React from 'react'\nimport { LayoutChangeEvent, StyleSheet, View } from 'react-native'\n\ntype WidthAndHeight = {\n  width: number\n  height: number\n}\n\nexport default function AutoSizer({\n  children,\n}: {\n  children: ({ width, height }: WidthAndHeight) => any\n}) {\n  const [layout, setLayout] = React.useState<WidthAndHeight | null>(null)\n  const onLayout = React.useCallback(\n    (event: LayoutChangeEvent) => {\n      const nl = event.nativeEvent.layout\n\n      // https://github.com/necolas/react-native-web/issues/1704\n      if (!layout || layout.width !== nl.width || layout.height !== nl.height) {\n        setLayout({ width: nl.width, height: nl.height })\n      }\n    },\n    [layout, setLayout]\n  )\n  return (\n    <View style={[styles.autoSizer, layout && layout]} onLayout={onLayout}>\n      {layout ? children(layout) : null}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  autoSizer: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n})\n","import * as React from 'react'\nimport { StyleSheet, View } from 'react-native'\n\nimport {\n  getIndexFromVerticalOffset,\n  getMonthHeight,\n  getVerticalMonthsOffset,\n  montHeaderHeight,\n} from './Month'\n\nimport { beginOffset, estimatedMonthHeight, totalMonths } from './dateUtils'\nimport { useLatest } from '../utils'\nimport { RenderProps, SwiperProps, useYearChange } from './SwiperUtils'\nimport AutoSizer from './AutoSizer'\n\nfunction Swiper({\n  scrollMode,\n  renderItem,\n  renderHeader,\n  renderFooter,\n  selectedYear,\n  initialIndex,\n}: SwiperProps) {\n  const isHorizontal = scrollMode === 'horizontal'\n  const [index, setIndex] = React.useState(initialIndex)\n\n  const onPrev = React.useCallback(() => {\n    setIndex((prev) => prev - 1)\n  }, [setIndex])\n\n  const onNext = React.useCallback(() => {\n    setIndex((prev) => prev + 1)\n  }, [setIndex])\n\n  const renderProps = {\n    index,\n    onPrev,\n    onNext,\n  }\n  const indexRef = useLatest(index)\n  useYearChange(\n    (newIndex) => {\n      if (newIndex) {\n        setIndex(newIndex)\n      }\n    },\n    {\n      selectedYear,\n      currentIndexRef: indexRef,\n    }\n  )\n\n  return (\n    <>\n      {renderHeader && renderHeader(renderProps)}\n      {isHorizontal ? (\n        <View style={styles.flex1}>\n          {renderItem({ index, onPrev, onNext })}\n        </View>\n      ) : (\n        <AutoSizer>\n          {({ width, height }) => (\n            <VerticalScroller\n              width={width}\n              height={height}\n              initialIndex={initialIndex}\n              estimatedHeight={estimatedMonthHeight}\n              renderItem={renderItem}\n            />\n          )}\n        </AutoSizer>\n      )}\n      {renderFooter && renderFooter(renderProps)}\n    </>\n  )\n}\n\nconst visibleArray = (i: number) => [i - 2, i - 1, i, i + 1, i + 2]\n\nfunction VerticalScroller({\n  width,\n  height,\n  initialIndex,\n  estimatedHeight,\n  renderItem,\n}: {\n  renderItem: (renderProps: RenderProps) => any\n  width: number\n  height: number\n  initialIndex: number\n  estimatedHeight: number\n}) {\n  const idx = React.useRef<number>(initialIndex)\n  const [visibleIndexes, setVisibleIndexes] = React.useState<number[]>(\n    visibleArray(initialIndex)\n  )\n  const parentRef = React.useRef<HTMLDivElement | null>(null)\n\n  useIsomorphicLayoutEffect(() => {\n    const element = parentRef.current\n    if (!element) {\n      return\n    }\n    const top = getVerticalMonthsOffset(idx.current) - montHeaderHeight\n\n    element.scrollTo({\n      top,\n    })\n  }, [parentRef, idx])\n\n  const setVisibleIndexesThrottled = useDebouncedCallback(setVisibleIndexes)\n\n  const onScroll = React.useCallback(\n    (e: React.UIEvent) => {\n      const top = e.currentTarget.scrollTop\n      if (top === 0) {\n        return\n      }\n\n      const offset = top - beginOffset\n      const index = getIndexFromVerticalOffset(offset)\n\n      if (idx.current !== index) {\n        idx.current = index\n        setVisibleIndexesThrottled(visibleArray(index))\n      }\n    },\n    [setVisibleIndexesThrottled]\n  )\n\n  return (\n    <div\n      ref={parentRef}\n      style={{\n        height,\n        width,\n        overflow: 'auto',\n      }}\n      onScroll={onScroll}\n    >\n      <div\n        style={{\n          height: estimatedHeight * totalMonths,\n          position: 'relative',\n        }}\n      >\n        {[0, 1, 2, 3, 4].map((vi) => (\n          <div\n            key={vi}\n            style={{\n              willChange: 'transform',\n              transform: `translateY(${getVerticalMonthsOffset(\n                visibleIndexes[vi]\n              )}px)`,\n              left: 0,\n              right: 0,\n              position: 'absolute',\n              height: getMonthHeight('vertical', visibleIndexes[vi]),\n              // transform: `translateY(${getMonthsOffset('vertical', vi)}px)`,\n            }}\n          >\n            {renderItem({\n              index: visibleIndexes[vi],\n              onPrev: empty,\n              onNext: empty,\n            })}\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nconst empty = () => null\n\nconst styles = StyleSheet.create({\n  flex1: {\n    flex: 1,\n  },\n})\n\nexport function useDebouncedCallback(callback: any): any {\n  const mounted = React.useRef<boolean>(true)\n  const latest = useLatest(callback)\n  const timerId = React.useRef<any>(null)\n\n  React.useEffect(() => {\n    return () => {\n      mounted.current = false\n      if (timerId.current) {\n        window.cancelAnimationFrame(timerId.current)\n      }\n    }\n  }, [mounted, timerId])\n\n  return React.useCallback(\n    (args: any) => {\n      if (timerId.current) {\n        window.cancelAnimationFrame(timerId.current)\n      }\n      timerId.current = window.requestAnimationFrame(function () {\n        if (mounted.current) {\n          latest.current(args)\n        }\n      })\n    },\n    [mounted, timerId, latest]\n  )\n}\n\nconst useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport default React.memo(Swiper)\n","import type { MutableRefObject } from 'react'\nimport { useLatest } from '../utils'\nimport * as React from 'react'\nimport {\n  addMonths,\n  differenceInMonths,\n  getRealIndex,\n  startAtIndex,\n} from './dateUtils'\n\nexport type RenderProps = {\n  index: number\n  onNext: () => any\n  onPrev: () => any\n}\n\nexport type SwiperProps = {\n  initialIndex: number\n  scrollMode: 'horizontal' | 'vertical'\n  renderItem: (renderProps: RenderProps) => any\n  renderHeader?: (renderProps: RenderProps) => any\n  renderFooter?: (renderProps: RenderProps) => any\n  selectedYear: number | undefined\n}\n\nexport function useYearChange(\n  onChange: (index: number | undefined) => void,\n  {\n    selectedYear,\n    currentIndexRef,\n  }: {\n    currentIndexRef: MutableRefObject<number>\n    selectedYear: number | undefined\n  }\n) {\n  const onChangeRef = useLatest(onChange)\n  React.useEffect(() => {\n    if (selectedYear) {\n      const currentIndex = currentIndexRef.current || 0\n      const currentDate = addMonths(new Date(), getRealIndex(currentIndex))\n      currentDate.setFullYear(selectedYear)\n\n      const today = new Date()\n      const months = differenceInMonths(today, currentDate)\n\n      const newIndex = startAtIndex + months\n      if (currentIndex !== newIndex) {\n        onChangeRef.current(newIndex)\n      }\n    }\n  }, [currentIndexRef, onChangeRef, selectedYear])\n}\n","import * as React from 'react'\nimport { FlatList, StyleSheet, View } from 'react-native'\nimport { Text, TouchableRipple, useTheme } from 'react-native-paper'\nimport { range } from '../utils'\n\nconst ITEM_HEIGHT = 62\n\nconst startYear = 1800\nconst endYear = 2200\nconst years = range(startYear, endYear)\n\nexport default function YearPicker({\n  selectedYear,\n  selectingYear,\n  onPressYear,\n}: {\n  selectedYear: number | undefined\n  selectingYear: boolean\n  onPressYear: (year: number) => any\n}) {\n  const theme = useTheme()\n  const flatList = React.useRef<FlatList<number> | null>(null)\n\n  // scroll to selected year\n  React.useEffect(() => {\n    if (flatList.current && selectedYear) {\n      const indexToGo = selectedYear - startYear\n      flatList.current.scrollToOffset({\n        offset: (indexToGo / 3) * ITEM_HEIGHT - ITEM_HEIGHT,\n        animated: false,\n      })\n    }\n  }, [flatList, selectedYear])\n\n  return (\n    <View\n      style={[\n        StyleSheet.absoluteFill,\n        styles.root,\n        { backgroundColor: theme.colors.surface },\n        selectingYear ? styles.opacity1 : styles.opacity0,\n      ]}\n      pointerEvents={selectingYear ? 'auto' : 'none'}\n    >\n      <FlatList<number>\n        ref={flatList}\n        style={styles.list}\n        data={years}\n        renderItem={({ item }) => (\n          <Year\n            year={item}\n            selected={selectedYear === item}\n            onPressYear={onPressYear}\n          />\n        )}\n        keyExtractor={(item) => `${item}`}\n        numColumns={3}\n      />\n    </View>\n  )\n}\n\nfunction YearPure({\n  year,\n  selected,\n  onPressYear,\n}: {\n  year: number\n  selected: boolean\n  onPressYear: (year: number) => any\n}) {\n  const theme = useTheme()\n  return (\n    <View style={styles.year}>\n      <TouchableRipple\n        onPress={() => onPressYear(year)}\n        style={styles.yearButton}\n      >\n        <View\n          style={[\n            styles.yearInner,\n            selected ? { backgroundColor: theme.colors.primary } : null,\n          ]}\n        >\n          <Text\n            style={[styles.yearLabel, selected ? styles.selectedYear : null]}\n            selectable={false}\n          >\n            {year}\n          </Text>\n        </View>\n      </TouchableRipple>\n    </View>\n  )\n}\nconst Year = React.memo(YearPure)\n\nconst styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    top: 56,\n    zIndex: 100,\n  },\n\n  list: {\n    flex: 1,\n  },\n  year: {\n    flex: 1,\n    marginLeft: 16,\n    marginRight: 16,\n    height: ITEM_HEIGHT,\n    justifyContent: 'center',\n  },\n  selectedYear: { color: '#fff' },\n  yearButton: {\n    borderRadius: 46 / 2,\n    overflow: 'hidden',\n  },\n  yearInner: {\n    borderRadius: 46 / 2,\n    height: 46,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  yearLabel: {\n    fontSize: 16,\n  },\n  opacity0: {\n    opacity: 0,\n  },\n  opacity1: {\n    opacity: 1,\n  },\n})\n","import * as React from 'react'\nimport { StyleSheet, View } from 'react-native'\nimport Swiper from './Swiper'\nimport Month from './Month'\nimport {\n  areDatesOnSameDay,\n  dateToUnix,\n  DisableWeekDaysType,\n  getEndOfDay,\n  getInitialIndex,\n} from './dateUtils'\n\nimport CalendarHeader from './CalendarHeader'\nimport { useCallback, useMemo } from 'react'\nimport YearPicker from './YearPicker'\nimport Color from 'color'\nimport { useTheme } from 'react-native-paper'\nimport { useLatest, lightenBy, darkenBy } from '../utils'\n\nexport type ModeType = 'single' | 'range' | 'multiple'\n\nexport type ScrollModeType = 'horizontal' | 'vertical'\n\nexport type ValidRangeType = {\n  startDate?: Date\n  endDate?: Date\n  disabledDates?: Date[]\n}\n\nexport type BaseCalendarProps = {\n  locale: string\n  disableWeekDays?: DisableWeekDaysType\n  validRange?: ValidRangeType\n\n  // here they are optional but in final implemenation they are required\n  date?: CalendarDate\n  dates?: CalendarDates\n  startDate?: CalendarDate\n  endDate?: CalendarDate\n  dateMode?: 'start' | 'end'\n}\n\nexport type CalendarDate = Date | undefined\nexport type CalendarDates = Date[] | undefined | null\n\nexport type RangeChange = (params: {\n  startDate: CalendarDate\n  endDate: CalendarDate\n}) => any\n\nexport type SingleChange = (params: { date: CalendarDate }) => void\n\nexport type MultiChange = (params: {\n  dates: CalendarDates\n  datePressed: Date\n  change: 'added' | 'removed'\n}) => any\n\nexport type MultiConfirm = (params: { dates: Date[] }) => void\n\nexport interface CalendarSingleProps extends BaseCalendarProps {\n  mode: 'single'\n  date: CalendarDate\n  onChange: SingleChange\n}\n\nexport interface CalendarRangeProps extends BaseCalendarProps {\n  mode: 'range'\n  startDate: CalendarDate\n  endDate: CalendarDate\n  onChange: RangeChange\n}\n\nexport interface CalendarMultiProps extends BaseCalendarProps {\n  mode: 'multiple'\n  dates: CalendarDates\n  onChange: MultiChange\n}\n\nfunction Calendar(\n  props: CalendarSingleProps | CalendarRangeProps | CalendarMultiProps\n) {\n  const {\n    locale,\n    mode,\n    onChange,\n    startDate,\n    endDate,\n    date,\n    disableWeekDays,\n    dates,\n    validRange,\n    dateMode,\n  } = props\n\n  const theme = useTheme()\n\n  const selectColor = useMemo<string>(() => {\n    if (theme.dark) {\n      return darkenBy(Color(theme.colors.primary), 0.9).hex()\n    }\n    return lightenBy(Color(theme.colors.primary), 0.9).hex()\n  }, [theme])\n\n  const scrollMode =\n    mode === 'range' || mode === 'multiple' ? 'vertical' : 'horizontal'\n\n  const [selectedYear, setSelectedYear] = React.useState<number | undefined>(\n    undefined\n  )\n  const [selectingYear, setSelectingYear] = React.useState<boolean>(false)\n  const onPressYear = useCallback(\n    (year: number) => {\n      setSelectedYear(year)\n      setSelectingYear((prev) => !prev)\n    },\n    [setSelectingYear]\n  )\n\n  // prevent re-rendering all months when something changed we only need the\n  // latest version of the props and we don't want the useCallback to change\n  const startDateRef = useLatest<CalendarDate>(startDate)\n  const endDateRef = useLatest<CalendarDate>(endDate)\n  const onChangeRef = useLatest<RangeChange | SingleChange | MultiChange>(\n    onChange\n  )\n  const datesRef = useLatest<CalendarDates>(dates)\n\n  const onPressDate = useCallback(\n    (d: Date) => {\n      if (mode === 'single') {\n        ;(onChangeRef.current as SingleChange)({\n          date: dateMode === 'start' ? d : getEndOfDay(d),\n        })\n      } else if (mode === 'range') {\n        const sd = startDateRef.current\n        const ed = endDateRef.current\n        let isStart: boolean = true\n        if (sd && !ed && dateToUnix(d) > dateToUnix(sd!)) {\n          isStart = false\n        }\n        ;(onChangeRef.current as RangeChange)({\n          startDate: isStart ? d : sd,\n          endDate: !isStart ? getEndOfDay(d) : undefined,\n        })\n      } else if (mode === 'multiple') {\n        datesRef.current = datesRef.current || []\n        const exists = datesRef.current.some((ed) => areDatesOnSameDay(ed, d))\n\n        const newDates = exists\n          ? datesRef.current.filter((ed) => !areDatesOnSameDay(ed, d))\n          : [...datesRef.current, d]\n\n        newDates.sort((a, b) => a.getTime() - b.getTime())\n        ;(onChangeRef.current as MultiChange)({\n          dates: newDates,\n          datePressed: d,\n          change: exists ? 'removed' : 'added',\n        })\n      }\n    },\n    [mode, dateMode, onChangeRef, startDateRef, endDateRef, datesRef]\n  )\n\n  const firstDate = startDate || date || dates?.[0]\n\n  return (\n    <View style={styles.root}>\n      <Swiper\n        initialIndex={getInitialIndex(firstDate)}\n        selectedYear={selectedYear}\n        scrollMode={scrollMode}\n        renderItem={({ index }) => (\n          <Month\n            locale={locale}\n            mode={mode}\n            key={index}\n            validRange={validRange}\n            index={index}\n            startDate={startDate}\n            endDate={endDate}\n            date={date}\n            dates={dates}\n            onPressYear={onPressYear}\n            selectingYear={selectingYear}\n            onPressDate={onPressDate}\n            scrollMode={scrollMode}\n            primaryColor={theme.colors.primary}\n            selectColor={selectColor}\n            roundness={theme.roundness}\n            disableWeekDays={disableWeekDays}\n          />\n        )}\n        renderHeader={({ onPrev, onNext }) => (\n          <CalendarHeader\n            locale={locale}\n            onPrev={onPrev}\n            onNext={onNext}\n            scrollMode={scrollMode}\n            disableWeekDays={disableWeekDays}\n          />\n        )}\n      />\n      {scrollMode === 'horizontal' ? (\n        <YearPicker\n          selectedYear={selectedYear}\n          selectingYear={selectingYear}\n          onPressYear={onPressYear}\n        />\n      ) : null}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  root: { flex: 1 },\n  viewPager: { flex: 1 },\n})\n\nexport default React.memo(Calendar)\n","import * as React from 'react'\nimport { Animated, StyleSheet, View } from 'react-native'\nimport { useTheme } from 'react-native-paper'\n\nexport default function AnimatedCrossView({\n  // visible,\n  collapsed,\n  calendar,\n  calendarEdit,\n}: {\n  calendar: any\n  calendarEdit: any\n  // visible: boolean\n  collapsed: boolean\n}) {\n  const theme = useTheme()\n  const calendarOpacity = React.useRef<Animated.Value>(\n    new Animated.Value(collapsed ? 1 : 0)\n  )\n  React.useEffect(() => {\n    // if (visible) {\n    Animated.timing(calendarOpacity.current, {\n      toValue: collapsed ? 1 : 0,\n      duration: 250,\n      useNativeDriver: true,\n    }).start()\n    // }\n  }, [collapsed])\n\n  return (\n    <View style={styles.root}>\n      <Animated.View\n        pointerEvents={collapsed ? 'auto' : 'none'}\n        style={[\n          styles.calendar,\n          {\n            opacity: calendarOpacity.current,\n            transform: [\n              {\n                scaleY: calendarOpacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [0.85, 1],\n                }),\n              },\n              {\n                scaleX: calendarOpacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [0.95, 1],\n                }),\n              },\n            ],\n          },\n        ]}\n      >\n        {calendar}\n      </Animated.View>\n      <Animated.View\n        pointerEvents={collapsed ? 'none' : 'auto'}\n        style={[\n          styles.calendarEdit,\n          {\n            backgroundColor: theme.colors.surface,\n            opacity: calendarOpacity.current.interpolate({\n              inputRange: [0, 1],\n              outputRange: [1, 0],\n            }),\n            transform: [\n              {\n                scale: calendarOpacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [1, 0.95],\n                }),\n              },\n            ],\n          },\n        ]}\n      >\n        {calendarEdit}\n      </Animated.View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  root: { flex: 1 },\n  calendarEdit: {\n    position: 'absolute',\n\n    left: 0,\n    right: 0,\n  },\n  calendar: {\n    flex: 1,\n  },\n})\n","export type TranslationsType = {\n  selectSingle: string\n  selectMultiple: string\n  selectRange: string\n  save: string\n  notAccordingToDateFormat: (inputFormat: string) => string\n  mustBeHigherThan: string\n  mustBeLowerThan: string\n  mustBeBetween: string\n  dateIsDisabled: string\n}\n\nlet translationsPerLocale: Record<string, TranslationsType> = {}\n\nexport function getTranslation(\n  locale: string | undefined,\n  key: keyof TranslationsType,\n  fallback?: any\n) {\n  const l = locale || 'en'\n  const translationForLocale = translationsPerLocale[l]\n  if (!translationForLocale) {\n    console.warn(\n      `[react-native-paper-dates] ${locale} is not registered, key: ${key}`\n    )\n    return fallback || key\n  }\n  const translation = translationsPerLocale[l][key]\n  if (!translationForLocale) {\n    console.warn(\n      `[react-native-paper-dates] ${locale} is registered, but ${key} is missing`\n    )\n  }\n  return translation || fallback || key\n}\n\nexport function registerTranslation(\n  locale: string,\n  translations: TranslationsType\n) {\n  translationsPerLocale[locale] = translations\n}\n","import * as React from 'react'\nimport { Animated, StyleSheet, SafeAreaView } from 'react-native'\nimport { Appbar, Button } from 'react-native-paper'\n\nimport { useHeaderTextColor } from '../utils'\nimport { getTranslation } from '../translations/utils'\n\nexport interface DatePickerModalHeaderProps {\n  disableSafeTop?: boolean\n  saveLabel?: string\n  onDismiss: () => void\n  onSave: () => void\n  locale: string | undefined\n}\n\nexport default function DatePickerModalHeader(\n  props: DatePickerModalHeaderProps\n) {\n  const { disableSafeTop, locale } = props\n  const saveLabel = props.saveLabel || getTranslation(locale, 'save')\n  const color = useHeaderTextColor()\n  return (\n    <>\n      <Animated.View style={styles.animated}>\n        <SafeAreaView\n          style={[\n            styles.safeContent,\n            disableSafeTop && styles.safeContentNoTop,\n          ]}\n        >\n          <Appbar style={styles.appbarHeader}>\n            <Appbar.Action\n              icon=\"close\"\n              onPress={props.onDismiss}\n              color={color}\n              testID=\"react-native-paper-dates-close\"\n            />\n            <Appbar.Content title={''} />\n            <Button\n              color={color}\n              onPress={props.onSave}\n              testID=\"react-native-paper-dates-save\"\n            >\n              {saveLabel}\n            </Button>\n          </Appbar>\n        </SafeAreaView>\n      </Animated.View>\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  fill: {\n    flex: 1,\n  },\n  animated: {\n    paddingBottom: 0,\n    elevation: 4,\n  },\n  safeContent: {\n    paddingBottom: 0,\n  },\n  safeContentNoTop: {\n    paddingTop: 0,\n  },\n  header: {\n    height: 75,\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingLeft: 24,\n    paddingRight: 12,\n  },\n  headerContentContainer: { marginTop: 5, flexDirection: 'row' },\n  label: { color: '#fff', letterSpacing: 1, fontSize: 13 },\n  singleHeaderText: { color: '#fff', fontSize: 25 },\n  rangeHeaderText: { color: '#fff', fontSize: 25 },\n  headerTextFilled: { color: 'rgba(255,255,255,1)' },\n  headerTextEmpty: { color: 'rgba(255,255,255,0.5)' },\n  headerSeparator: {\n    color: 'rgba(255,255,255,1)',\n    fontSize: 25,\n    paddingLeft: 6,\n    paddingRight: 6,\n  },\n  appbarHeader: {\n    elevation: 0,\n    backgroundColor: 'transparent',\n    // alignItems:'center'\n  },\n})\n","import * as React from 'react'\nimport { View, StyleSheet } from 'react-native'\nimport { IconButton, Text } from 'react-native-paper'\nimport type { ModeType } from './Calendar'\nimport type { LocalState } from './DatePickerModalContent'\nimport { useHeaderTextColor } from '../utils'\nimport Color from 'color'\nimport { getTranslation } from '../translations/utils'\n\nexport interface HeaderPickProps {\n  moreLabel?: string\n  label?: string\n  emptyLabel?: string\n  saveLabel?: string\n  headerSeparator?: string\n  startLabel?: string\n  endLabel?: string\n}\n\nexport interface HeaderContentProps extends HeaderPickProps {\n  state: LocalState\n  mode: ModeType\n  collapsed: boolean\n  onToggle: () => any\n  locale: string | undefined\n}\n\nfunction getLabel(\n  locale: string | undefined,\n  mode: ModeType,\n  configuredLabel?: string\n) {\n  if (configuredLabel) {\n    return configuredLabel\n  }\n  if (mode === 'range') {\n    return getTranslation(locale, 'selectRange')\n  }\n  if (mode === 'multiple') {\n    return getTranslation(locale, 'selectMultiple')\n  }\n  if (mode === 'single') {\n    return getTranslation(locale, 'selectSingle')\n  }\n  return '...?'\n}\n\nexport default function DatePickerModalContentHeader(\n  props: HeaderContentProps\n) {\n  const { onToggle, collapsed, mode, moreLabel } = props\n\n  const label = getLabel(props.locale, props.mode, props.label)\n\n  const color = useHeaderTextColor()\n  const allowEditing = mode !== 'multiple'\n  return (\n    <View style={[styles.header]}>\n      <View>\n        <Text style={[styles.label, { color }]}>{label.toUpperCase()}</Text>\n\n        <View style={styles.headerContentContainer}>\n          {mode === 'range' ? (\n            <HeaderContentRange {...props} color={color} />\n          ) : null}\n          {mode === 'single' ? (\n            <HeaderContentSingle {...props} color={color} />\n          ) : null}\n          {mode === 'multiple' ? (\n            <HeaderContentMulti\n              {...props}\n              color={color}\n              moreLabel={moreLabel}\n            />\n          ) : null}\n        </View>\n      </View>\n      <View style={styles.fill} />\n      {allowEditing ? (\n        <IconButton\n          icon={collapsed ? 'pencil' : 'calendar'}\n          color={color}\n          onPress={onToggle}\n        />\n      ) : null}\n    </View>\n  )\n}\n\nexport function HeaderContentSingle({\n  state,\n  emptyLabel = ' ',\n  color,\n  locale,\n}: HeaderContentProps & { color: string }) {\n  const lighterColor = Color(color).fade(0.5).rgb().toString()\n  const dateColor = state.date ? color : lighterColor\n\n  const formatter = React.useMemo(() => {\n    return new Intl.DateTimeFormat(locale, {\n      month: 'short',\n      day: 'numeric',\n    })\n  }, [locale])\n\n  return (\n    <Text style={[styles.singleHeaderText, { color: dateColor }]}>\n      {state.date ? formatter.format(state.date) : emptyLabel}\n    </Text>\n  )\n}\n\nexport function HeaderContentMulti({\n  state,\n  emptyLabel = ' ',\n  moreLabel = 'more',\n  color,\n  locale,\n}: HeaderContentProps & { color: string; moreLabel: string | undefined }) {\n  const dateCount = state.dates?.length || 0\n  const lighterColor = Color(color).fade(0.5).rgb().toString()\n  const dateColor = dateCount ? color : lighterColor\n\n  const formatter = React.useMemo(() => {\n    return new Intl.DateTimeFormat(locale, {\n      month: 'short',\n      day: 'numeric',\n    })\n  }, [locale])\n\n  let label = emptyLabel\n  if (dateCount) {\n    if (dateCount <= 2) {\n      label = state.dates!.map((date) => formatter.format(date)).join(', ')\n    } else {\n      label =\n        formatter.format(state.dates![0]) + ` (+ ${dateCount - 1} ${moreLabel})`\n    }\n  }\n\n  return (\n    <Text style={[styles.singleHeaderText, { color: dateColor }]}>{label}</Text>\n  )\n}\n\nexport function HeaderContentRange({\n  locale,\n  state,\n  headerSeparator = '-',\n  startLabel = 'Start',\n  endLabel = 'End',\n  color,\n}: HeaderContentProps & { color: string }) {\n  const formatter = React.useMemo(() => {\n    return new Intl.DateTimeFormat(locale, {\n      month: 'short',\n      day: 'numeric',\n    })\n  }, [locale])\n\n  const lighterColor = Color(color).fade(0.5).rgb().toString()\n  const startColor = state.startDate ? color : lighterColor\n  const endColor = state.endDate ? color : lighterColor\n\n  return (\n    <>\n      <Text style={[styles.rangeHeaderText, { color: startColor }]}>\n        {state.startDate ? formatter.format(state.startDate) : startLabel}\n      </Text>\n      <Text style={[styles.headerSeparator, { color }]}>{headerSeparator}</Text>\n      <Text style={[styles.rangeHeaderText, { color: endColor }]}>\n        {state.endDate ? formatter.format(state.endDate) : endLabel}\n      </Text>\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  fill: {\n    flex: 1,\n  },\n  animated: {\n    paddingBottom: 0,\n    elevation: 4,\n  },\n  safeContent: {\n    paddingBottom: 0,\n  },\n  header: {\n    height: 75,\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingLeft: 24,\n    paddingRight: 12,\n  },\n  headerContentContainer: { marginTop: 5, flexDirection: 'row' },\n  label: { color: '#fff', letterSpacing: 1, fontSize: 13 },\n  singleHeaderText: { color: '#fff', fontSize: 25 },\n  rangeHeaderText: { color: '#fff', fontSize: 25 },\n  excludeInRangeHeaderText: { fontSize: 25 },\n  excludeInRangeHeaderTextSmall: {\n    fontSize: 14,\n    marginTop: -3,\n    marginLeft: 3,\n  },\n\n  headerSeparator: {\n    color: 'rgba(255,255,255,1)',\n    fontSize: 25,\n    paddingLeft: 6,\n    paddingRight: 6,\n  },\n  appbarHeader: {\n    elevation: 0,\n  },\n  column: { flexDirection: 'column' },\n  row: { flexDirection: 'row' },\n})\n","import * as React from 'react'\nimport { TextInput } from 'react-native-paper'\n\nconst splitCharacters = ['-', '/', '.', '年', ' ']\nfunction detectCharacter(mask: string): string {\n  const c = splitCharacters.find((ch) => mask.includes(ch))\n  return c || ''\n}\n\nfunction enhanceTextWithMask(\n  text: string,\n  mask: string,\n  previousValue: string\n): string {\n  const isBackSpace = previousValue.length > text.length\n  const splitCharacter = detectCharacter(mask)\n\n  const maskParts = mask.split(splitCharacter)\n  const textParts = text.split(splitCharacter)\n\n  let finalString: string[] = []\n  for (let maskPartIndex = 0; maskPartIndex < mask.length; maskPartIndex++) {\n    let partString: string[] = []\n\n    const maskPart = maskParts[maskPartIndex]\n    const textPart = textParts[maskPartIndex]\n    if (!textPart) {\n      continue\n    }\n\n    for (\n      let maskDigitIndex = 0;\n      maskDigitIndex < maskPart.length;\n      maskDigitIndex++\n    ) {\n      const currentCharacter = textPart[maskDigitIndex]\n\n      if (isBackSpace && currentCharacter === undefined) {\n        continue\n      }\n\n      const character = textPart[maskDigitIndex]\n\n      if (character !== undefined) {\n        partString.push(character)\n      }\n    }\n\n    finalString.push(partString.join(''))\n  }\n\n  const lastPart = finalString[finalString.length - 1]\n  const lastMaskPart = maskParts[finalString.length - 1]\n  if (\n    // if mask is completed\n    finalString.length !== maskParts.length &&\n    // or ...\n    lastPart &&\n    lastMaskPart &&\n    lastPart.length === lastMaskPart.length\n  ) {\n    return (\n      finalString.join(splitCharacter) + (isBackSpace ? '' : splitCharacter)\n    )\n  }\n  return finalString.join(splitCharacter)\n}\n\nfunction TextInputWithMask(\n  {\n    onChangeText,\n    value,\n    mask,\n    ...rest\n  }: React.ComponentProps<typeof TextInput> & { mask: string },\n  ref: any\n) {\n  const [controlledValue, setControlledValue] = React.useState<string>(\n    value || ''\n  )\n\n  const onInnerChange = (text: string) => {\n    const enhancedText = enhanceTextWithMask(text, mask, controlledValue)\n    setControlledValue(enhancedText)\n\n    if (text.length === mask.length) {\n      onChangeText && onChangeText(text)\n    }\n  }\n\n  React.useEffect(() => {\n    setControlledValue(value || '')\n  }, [value])\n\n  return (\n    <TextInput\n      ref={ref}\n      {...rest}\n      value={controlledValue}\n      onChangeText={onInnerChange}\n    />\n  )\n}\n\nexport default React.forwardRef(TextInputWithMask)\n","import { useInputFormat, useInputFormatter, useRangeChecker } from './dateUtils'\nimport * as React from 'react'\nimport type { ValidRangeType } from './Calendar'\nimport { getTranslation } from 'react-native-paper-dates'\n\nexport default function useDateInput({\n  locale,\n  value,\n  validRange,\n  inputMode,\n  onChange,\n}: {\n  onChange: (d: Date) => void\n  locale: undefined | string\n  value: Date | undefined\n  validRange: ValidRangeType | undefined\n  inputMode: 'start' | 'end'\n}) {\n  const { isDisabled, isWithinValidRange, validStart, validEnd } =\n    useRangeChecker(validRange)\n  const [error, setError] = React.useState<null | string>(null)\n  const formatter = useInputFormatter({ locale })\n  const inputFormat = useInputFormat({ formatter })\n  const formattedValue = formatter.format(value)\n  const onChangeText = (date: string) => {\n    const dayIndex = inputFormat.indexOf('DD')\n    const monthIndex = inputFormat.indexOf('MM')\n    const yearIndex = inputFormat.indexOf('YYYY')\n\n    const day = Number(date.slice(dayIndex, dayIndex + 2))\n    const year = Number(date.slice(yearIndex, yearIndex + 4))\n    const month = Number(date.slice(monthIndex, monthIndex + 2))\n\n    if (Number.isNaN(day) || Number.isNaN(year) || Number.isNaN(month)) {\n      setError(\n        getTranslation(\n          locale,\n          'notAccordingToDateFormat',\n          () => 'notAccordingToDateFormat'\n        )(inputFormat)\n      )\n      return\n    }\n\n    const finalDate =\n      inputMode === 'end'\n        ? new Date(year, month - 1, day, 23, 59, 59)\n        : new Date(year, month - 1, day)\n\n    if (isDisabled(finalDate)) {\n      setError(getTranslation(locale, 'dateIsDisabled'))\n      return\n    }\n    if (!isWithinValidRange(finalDate)) {\n      let errors =\n        validStart && validEnd\n          ? [\n              `${getTranslation(locale, 'mustBeBetween')} ${formatter.format(\n                validStart\n              )} - ${formatter.format(validEnd)}`,\n            ]\n          : [\n              validStart\n                ? `${getTranslation(\n                    locale,\n                    'mustBeHigherThan'\n                  )} ${formatter.format(validStart)}`\n                : '',\n              validEnd\n                ? `${getTranslation(\n                    locale,\n                    'mustBeLowerThan'\n                  )} ${formatter.format(validEnd)}`\n                : '',\n            ]\n      setError(errors.filter((n) => n).join(' '))\n      return\n    }\n\n    setError(null)\n    if (inputMode === 'end') {\n      onChange(finalDate)\n    } else {\n      onChange(finalDate)\n    }\n  }\n  return {\n    onChange,\n    error,\n    formattedValue,\n    onChangeText,\n    inputFormat,\n  }\n}\n","import * as React from 'react'\n\nimport TextInputWithMask from '../TextInputMask'\nimport { HelperText, IconButton, TextInput, useTheme } from 'react-native-paper'\nimport { View, StyleSheet } from 'react-native'\nimport DatePickerModal from './DatePickerModal'\nimport useDateInput from './inputUtils'\nimport type { ValidRangeType } from './Calendar'\nimport { useLatest } from '../utils'\n\nfunction DatePickerInput(\n  {\n    label,\n    value,\n    onChange,\n    style,\n    locale,\n    validRange,\n    inputMode,\n    withModal = true,\n    withDateFormatInLabel = true,\n    ...rest\n  }: Omit<React.ComponentProps<typeof TextInput>, 'value' | 'onChange'> & {\n    inputMode: 'start' | 'end'\n    locale: string\n    onChange: (date: Date | undefined) => void\n    value: Date | undefined\n    validRange?: ValidRangeType | undefined\n    withModal?: boolean\n    withDateFormatInLabel?: boolean\n  },\n  ref: any\n) {\n  const theme = useTheme()\n  const { formattedValue, inputFormat, onChangeText, error } = useDateInput({\n    locale,\n    value,\n    validRange,\n    inputMode,\n    onChange,\n  })\n\n  const [visible, setVisible] = React.useState<boolean>(false)\n  const onDismiss = React.useCallback(() => {\n    setVisible(false)\n  }, [setVisible])\n  const onChangeRef = useLatest(onChange)\n  const onInnerConfirm = React.useCallback(\n    ({ date }) => {\n      setVisible(false)\n      onChangeRef.current(date)\n    },\n    [setVisible, onChangeRef]\n  )\n\n  return (\n    <>\n      <View style={styles.root}>\n        <TextInputWithMask\n          {...rest}\n          ref={ref}\n          label={getLabel({ label, inputFormat, withDateFormatInLabel })}\n          value={formattedValue}\n          keyboardType={'number-pad'}\n          placeholder={inputFormat}\n          mask={inputFormat}\n          onChangeText={onChangeText}\n          keyboardAppearance={theme.dark ? 'dark' : 'default'}\n          error={!!error}\n          style={[styles.input, style]}\n        />\n        {withModal ? (\n          <IconButton\n            size={24}\n            style={styles.calendarButton}\n            icon=\"calendar\"\n            onPress={() => setVisible(true)}\n          />\n        ) : null}\n      </View>\n      <HelperText type=\"error\" visible={!!error}>\n        {error}\n      </HelperText>\n\n      {withModal ? (\n        <DatePickerModal\n          date={value}\n          mode=\"single\"\n          visible={visible}\n          onDismiss={onDismiss}\n          onConfirm={onInnerConfirm}\n          locale={locale}\n          dateMode={inputMode}\n        />\n      ) : null}\n    </>\n  )\n}\n\nfunction getLabel({\n  withDateFormatInLabel,\n  inputFormat,\n  label,\n}: {\n  withDateFormatInLabel: boolean\n  inputFormat: string\n  label: string | undefined\n}) {\n  if (withDateFormatInLabel) {\n    return label ? `${label} (${inputFormat})` : inputFormat\n  }\n  return label || ''\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    minWidth: 150,\n    flexDirection: 'row',\n    position: 'relative',\n    alignItems: 'center',\n    flexGrow: 1,\n    alignSelf: 'flex-start',\n  },\n  input: {\n    flexGrow: 1,\n  },\n  calendarButton: { position: 'absolute', right: 0 },\n})\nexport default React.forwardRef(DatePickerInput)\n","import * as React from 'react'\nimport {\n  View,\n  StyleSheet,\n  TextInput as TextInputNative,\n  Keyboard,\n} from 'react-native'\n\nimport type { ModeType, ValidRangeType } from './Calendar'\nimport type { LocalState } from './DatePickerModalContent'\n\nimport DatePickerInput from './DatePickerInput'\n\nfunction CalendarEdit({\n  mode,\n  state,\n  label = '',\n  startLabel = 'Start',\n  endLabel = 'End',\n  collapsed,\n  onChange,\n  validRange,\n  locale,\n}: {\n  mode: ModeType\n  label?: string\n  startLabel?: string\n  endLabel?: string\n  state: LocalState\n  collapsed: boolean\n  onChange: (s: LocalState) => any\n  validRange: ValidRangeType | undefined\n  locale: string\n}) {\n  const dateInput = React.useRef<TextInputNative | null>(null)\n  const startInput = React.useRef<TextInputNative | null>(null)\n  const endInput = React.useRef<TextInputNative | null>(null)\n\n  // when switching views focus, or un-focus text input\n  React.useEffect(() => {\n    // hide open keyboard\n    if (collapsed) {\n      Keyboard.dismiss()\n    }\n\n    const inputsToFocus = [dateInput.current, startInput.current].filter(\n      (n) => n\n    ) as TextInputNative[]\n\n    const inputsToBlur = [\n      dateInput.current,\n      startInput.current,\n      endInput.current,\n    ].filter((n) => n) as TextInputNative[]\n\n    if (collapsed) {\n      inputsToBlur.forEach((ip) => ip.blur())\n    } else {\n      inputsToFocus.forEach((ip) => ip.focus())\n    }\n  }, [mode, startInput, endInput, dateInput, collapsed])\n\n  const onSubmitStartInput = React.useCallback(() => {\n    if (endInput.current) {\n      endInput.current.focus()\n    }\n  }, [endInput])\n\n  const onSubmitEndInput = React.useCallback(() => {\n    // TODO: close modal and persist range\n  }, [])\n\n  const onSubmitInput = React.useCallback(() => {\n    // TODO: close modal and persist range\n  }, [])\n\n  return (\n    <View style={styles.root}>\n      <View style={styles.inner}>\n        {mode === 'single' ? (\n          <DatePickerInput\n            inputMode=\"start\"\n            ref={dateInput}\n            label={label}\n            value={state.date}\n            onChange={(date) => onChange({ ...state, date })}\n            onSubmitEditing={onSubmitInput}\n            validRange={validRange}\n            locale={locale}\n            withModal={false}\n          />\n        ) : null}\n        {mode === 'range' ? (\n          <>\n            <DatePickerInput\n              inputMode=\"start\"\n              ref={startInput}\n              label={startLabel}\n              value={state.startDate}\n              onChange={(startDate) => onChange({ ...state, startDate })}\n              returnKeyType={'next'}\n              onSubmitEditing={onSubmitStartInput}\n              validRange={validRange}\n              locale={locale}\n              withModal={false}\n            />\n            <View style={styles.separator} />\n            <DatePickerInput\n              inputMode=\"end\"\n              ref={endInput}\n              label={endLabel}\n              value={state.endDate}\n              onChange={(endDate) => onChange({ ...state, endDate })}\n              onSubmitEditing={onSubmitEndInput}\n              validRange={validRange}\n              locale={locale}\n              withModal={false}\n            />\n          </>\n        ) : null}\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  root: { padding: 12 },\n  inner: { flexDirection: 'row' },\n  inputContainer: { flex: 1 },\n  input: { flex: 1 },\n  separator: { width: 12 },\n})\n\nexport default React.memo(CalendarEdit)\n","import { Animated, SafeAreaView, StyleSheet } from 'react-native'\nimport * as React from 'react'\nimport { useHeaderBackgroundColor } from '../utils'\n\nexport default function DatePickerModalHeaderBackground({\n  children,\n}: {\n  children: any\n}) {\n  const backgroundColor = useHeaderBackgroundColor()\n\n  return (\n    <Animated.View\n      style={[\n        styles.animated,\n        {\n          backgroundColor,\n        },\n      ]}\n    >\n      <SafeAreaView style={styles.safeContent}>{children}</SafeAreaView>\n    </Animated.View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  animated: {\n    paddingBottom: 0,\n    elevation: 4,\n  },\n  safeContent: {\n    paddingBottom: 0,\n  },\n})\n","import * as React from 'react'\n\nimport Calendar, {\n  BaseCalendarProps,\n  CalendarDate,\n  CalendarDates,\n  MultiChange,\n  MultiConfirm,\n  RangeChange,\n  SingleChange,\n} from './Calendar'\n\nimport AnimatedCrossView from './AnimatedCrossView'\n\nimport DatePickerModalHeader from './DatePickerModalHeader'\nimport DatePickerModalContentHeader, {\n  HeaderPickProps,\n} from './DatePickerModalContentHeader'\nimport CalendarEdit from './CalendarEdit'\nimport DatePickerModalHeaderBackground from './DatePickerModalHeaderBackground'\n\nexport type LocalState = {\n  startDate: CalendarDate\n  endDate: CalendarDate\n  date: CalendarDate\n  dates: CalendarDates\n}\n\ninterface DatePickerModalContentBaseProps {\n  inputFormat?: string\n  locale: string\n  onDismiss: () => any\n  disableSafeTop?: boolean\n}\n\nexport interface DatePickerModalContentRangeProps\n  extends HeaderPickProps,\n    BaseCalendarProps,\n    DatePickerModalContentBaseProps {\n  mode: 'range'\n  startDate: CalendarDate\n  endDate: CalendarDate\n  onChange?: RangeChange\n  onConfirm: RangeChange\n}\n\nexport interface DatePickerModalContentSingleProps\n  extends HeaderPickProps,\n    BaseCalendarProps,\n    DatePickerModalContentBaseProps {\n  mode: 'single'\n  date?: CalendarDate\n  onChange?: SingleChange\n  onConfirm: SingleChange\n  dateMode?: 'start' | 'end'\n}\n\nexport interface DatePickerModalContentMultiProps\n  extends HeaderPickProps,\n    BaseCalendarProps,\n    DatePickerModalContentBaseProps {\n  mode: 'multiple'\n  dates?: CalendarDates\n  onChange?: MultiChange\n  onConfirm: MultiConfirm\n}\n\nexport function DatePickerModalContent(\n  props:\n    | DatePickerModalContentRangeProps\n    | DatePickerModalContentSingleProps\n    | DatePickerModalContentMultiProps\n) {\n  const {\n    mode,\n    onChange,\n    onConfirm,\n    onDismiss,\n    disableSafeTop,\n    disableWeekDays,\n    locale,\n    validRange,\n    dateMode,\n  } = props\n\n  const anyProps = props as any\n\n  // use local state to add only onConfirm state changes\n  const [state, setState] = React.useState<LocalState>({\n    date: anyProps.date,\n    startDate: anyProps.startDate,\n    endDate: anyProps.endDate,\n    dates: anyProps.dates,\n  })\n\n  // update local state if changed from outside or if modal is opened\n  React.useEffect(() => {\n    setState({\n      date: anyProps.date,\n      startDate: anyProps.startDate,\n      endDate: anyProps.endDate,\n      dates: anyProps.dates,\n    })\n  }, [anyProps.date, anyProps.startDate, anyProps.endDate, anyProps.dates])\n\n  const [collapsed, setCollapsed] = React.useState<boolean>(true)\n\n  const onInnerChange = React.useCallback(\n    (params) => {\n      onChange && onChange(params)\n      setState((prev) => ({ ...prev, ...params }))\n    },\n    [onChange, setState]\n  )\n\n  const onInnerConfirm = React.useCallback(() => {\n    if (mode === 'single') {\n      ;(onConfirm as DatePickerModalContentSingleProps['onConfirm'])({\n        date: state.date,\n      })\n    } else if (mode === 'range') {\n      ;(onConfirm as DatePickerModalContentRangeProps['onConfirm'])({\n        startDate: state.startDate,\n        endDate: state.endDate,\n      })\n    } else if (mode === 'multiple') {\n      ;(onConfirm as DatePickerModalContentMultiProps['onConfirm'])({\n        dates: state.dates || [],\n      })\n    }\n  }, [state, mode, onConfirm])\n\n  const onToggleCollapse = React.useCallback(() => {\n    setCollapsed((prev) => !prev)\n  }, [setCollapsed])\n\n  return (\n    <>\n      <DatePickerModalHeaderBackground>\n        <DatePickerModalHeader\n          locale={locale}\n          onSave={onInnerConfirm}\n          onDismiss={onDismiss}\n          saveLabel={props.saveLabel}\n          disableSafeTop={disableSafeTop}\n        />\n        <DatePickerModalContentHeader\n          state={state}\n          mode={mode}\n          collapsed={collapsed}\n          onToggle={onToggleCollapse}\n          headerSeparator={props.headerSeparator}\n          emptyLabel={props.emptyLabel}\n          label={props.label}\n          moreLabel={props.moreLabel}\n          startLabel={props.startLabel}\n          endLabel={props.endLabel}\n          locale={locale}\n        />\n      </DatePickerModalHeaderBackground>\n\n      <AnimatedCrossView\n        collapsed={collapsed}\n        calendar={\n          <Calendar\n            locale={locale}\n            mode={mode}\n            startDate={state.startDate}\n            endDate={state.endDate}\n            date={state.date}\n            onChange={onInnerChange}\n            disableWeekDays={disableWeekDays}\n            dates={state.dates}\n            validRange={validRange}\n            dateMode={dateMode}\n          />\n        }\n        calendarEdit={\n          <CalendarEdit\n            mode={mode}\n            state={state}\n            label={props.label}\n            startLabel={props.startLabel}\n            endLabel={props.endLabel}\n            collapsed={collapsed}\n            onChange={onInnerChange}\n            validRange={validRange}\n            locale={locale}\n          />\n        }\n      />\n    </>\n  )\n}\n\nexport default React.memo(DatePickerModalContent)\n","import * as React from 'react'\nimport {\n  Modal,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  useWindowDimensions,\n  View,\n  Platform,\n  StatusBar,\n} from 'react-native'\n\nimport { useTheme } from 'react-native-paper'\nimport DatePickerModalContent, {\n  DatePickerModalContentMultiProps,\n  DatePickerModalContentRangeProps,\n  DatePickerModalContentSingleProps,\n} from './DatePickerModalContent'\nimport { useHeaderBackgroundColor, useHeaderColorIsLight } from '../utils'\n\ninterface DatePickerModalProps {\n  visible: boolean\n  animationType?: 'slide' | 'fade' | 'none'\n  disableStatusBar?: boolean\n  disableStatusBarPadding?: boolean\n}\n\nexport interface DatePickerModalSingleProps\n  extends DatePickerModalContentSingleProps,\n    DatePickerModalProps {}\n\nexport interface DatePickerModalMultiProps\n  extends DatePickerModalContentMultiProps,\n    DatePickerModalProps {}\n\nexport interface DatePickerModalRangeProps\n  extends DatePickerModalContentRangeProps,\n    DatePickerModalProps {}\n\nexport function DatePickerModal(\n  props:\n    | DatePickerModalRangeProps\n    | DatePickerModalSingleProps\n    | DatePickerModalMultiProps\n) {\n  const theme = useTheme()\n  const dimensions = useWindowDimensions()\n  const {\n    visible,\n    animationType,\n    disableStatusBar,\n    disableStatusBarPadding,\n    ...rest\n  } = props\n  const animationTypeCalculated =\n    animationType ||\n    Platform.select({\n      web: 'none',\n      default: 'slide',\n    })\n\n  const isLight = useHeaderColorIsLight()\n  const headerBackgroundColor = useHeaderBackgroundColor()\n\n  return (\n    <View style={[StyleSheet.absoluteFill]} pointerEvents=\"box-none\">\n      <Modal\n        animationType={animationTypeCalculated}\n        transparent={true}\n        visible={visible}\n        onRequestClose={rest.onDismiss}\n        presentationStyle=\"overFullScreen\"\n        supportedOrientations={supportedOrientations}\n        //@ts-ignore\n        statusBarTranslucent={true}\n      >\n        <>\n          <TouchableWithoutFeedback onPress={rest.onDismiss}>\n            <View\n              style={[\n                StyleSheet.absoluteFill,\n                styles.modalBackground,\n                { backgroundColor: theme.colors.backdrop },\n              ]}\n            />\n          </TouchableWithoutFeedback>\n          <View\n            style={[StyleSheet.absoluteFill, styles.modalRoot]}\n            pointerEvents=\"box-none\"\n          >\n            <View\n              style={[\n                styles.modalContent,\n                { backgroundColor: theme.colors.surface },\n                dimensions.width > 650 ? styles.modalContentBig : null,\n              ]}\n            >\n              {disableStatusBar ? null : (\n                <StatusBar\n                  translucent={true}\n                  barStyle={isLight ? 'dark-content' : 'light-content'}\n                />\n              )}\n              {disableStatusBarPadding ? null : (\n                <View\n                  style={[\n                    {\n                      height: StatusBar.currentHeight,\n                      backgroundColor: headerBackgroundColor,\n                    },\n                  ]}\n                />\n              )}\n              <DatePickerModalContent\n                {...rest}\n                disableSafeTop={disableStatusBar}\n              />\n            </View>\n          </View>\n        </>\n      </Modal>\n    </View>\n  )\n}\nconst supportedOrientations: any = [\n  'portrait',\n  'portrait-upside-down',\n  'landscape',\n  'landscape-left',\n  'landscape-right',\n]\n\nconst styles = StyleSheet.create({\n  modalRoot: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    flex: 1,\n  },\n  modalBackground: {\n    flex: 1,\n  },\n  modalContent: {\n    flex: 1,\n    width: '100%',\n  },\n  modalContentBig: {\n    maxWidth: 600,\n    maxHeight: 800,\n    borderRadius: 10,\n    width: '100%',\n    overflow: 'hidden',\n  },\n})\n\nexport default React.memo(DatePickerModal)\n","import * as React from 'react'\nimport Color from 'color'\nimport { useTheme } from 'react-native-paper'\n\n// 250? when bigger?\nexport const circleSize = 215\n\nexport type PossibleHourTypes = 'am' | 'pm'\nexport type HourTypeMap = {\n  [hourType in PossibleHourTypes]: PossibleHourTypes\n}\nexport const hourTypes: HourTypeMap = {\n  am: 'am',\n  pm: 'pm',\n}\n\nexport function getHourType(hours: number): PossibleHourTypes | undefined {\n  if (hours >= 0 && hours <= 12) {\n    return hourTypes.am\n  }\n  if (hours > 12 && hours <= 24) {\n    return hourTypes.pm\n  }\n  return undefined\n}\n\nexport type PossibleInputTypes = 'keyboard' | 'picker'\nexport type InputTypeMap = {\n  [inputType in PossibleInputTypes]: PossibleInputTypes\n}\nexport const inputTypes: InputTypeMap = {\n  keyboard: 'keyboard',\n  picker: 'picker',\n}\n\nexport const reverseInputTypes: InputTypeMap = {\n  keyboard: 'picker',\n  picker: 'keyboard',\n}\ntype InputIconMap = {\n  [inputType in PossibleInputTypes]: string\n}\nexport const inputTypeIcons: InputIconMap = {\n  keyboard: 'keyboard-outline',\n  picker: 'clock-outline',\n}\n\nexport type PossibleClockTypes = 'hours' | 'minutes'\nexport type ClockTypeMap = {\n  [clockType in PossibleClockTypes]: PossibleClockTypes\n}\nexport const clockTypes: ClockTypeMap = {\n  minutes: 'minutes',\n  hours: 'hours',\n}\n\n// Code inspiration and copied from: https://github.com/ShaneGH/analogue-time-picker/blob/master/src/utils/angle.ts\n\nconst outerHeight = 34\nconst _30 = Math.PI / 6\nconst _12 = Math.PI / 30\nconst _360 = Math.PI * 2\nconst _90 = Math.PI / 2\n\n/** Snap an angle to a given step. E.g. if angle = 22° and step = 10°, round down to 20° */\nexport function snap(angle: number, step: number) {\n  let a = angle\n  while (a < 0) a += _360\n  let diff = a % step\n\n  if (diff <= step / 2) {\n    return angle - diff\n  }\n\n  return angle - diff + step\n}\n\n// detect am / pm based on offset\nexport function getHourTypeFromOffset(\n  left: number,\n  top: number,\n  size: number\n): PossibleHourTypes {\n  const w = size / 2\n  const x = w - left\n  const y = size / 2 - top\n\n  const distance = Math.sqrt(x * x + y * y)\n  const maxPm = w - outerHeight\n\n  return distance > maxPm ? hourTypes.am : hourTypes.pm\n}\n\n// Calculate the minute from the hand angle\nexport function getMinutes(handAngle: number) {\n  handAngle = snap(handAngle, _12)\n\n  let minute = parseInt((((handAngle - _90) % _360) / _12).toFixed(), 10)\n  while (minute < 0) minute += 60\n  while (minute >= 60) minute -= 60\n\n  return minute\n}\n\n// Calculate the hour from the hand angle\nexport function getHours(\n  handAngle: number,\n  hourType: PossibleHourTypes | undefined\n) {\n  handAngle = snap(handAngle, _30)\n\n  let hour = parseInt((((handAngle - _90) % _360) / _30).toFixed(), 10)\n  if (hour < 0) hour += 12\n  if (hour >= 12) hour -= 12\n\n  if (hourType === hourTypes.am) {\n    if (hour <= 0) {\n      hour += 12\n    } else if (hour >= 12) {\n      hour -= 12\n    }\n  }\n  if (hourType === hourTypes.pm) {\n    if (hour <= 0) {\n      hour += 12\n    } else if (hour > 12) {\n      hour -= 12\n    }\n  }\n\n  return hour\n}\n\n/** Get the angle of the left/top co-ordinate from the center of the width.height box */\nexport function getAngle(left: number, top: number, size: number) {\n  const x = size / 2 - left\n  const y = size / 2 - top\n\n  // tan O = y / x\n  let angle = x ? Math.atan(y / x) : y < 0 ? -_90 : _90\n  if (x < 0) {\n    // reflect along vertical axis\n    angle = -angle + 2 * (_90 + angle)\n  }\n\n  return angle\n}\n\nexport function useSwitchColors(highlighted: boolean) {\n  const theme = useTheme()\n  const backgroundColor = React.useMemo<string>(() => {\n    if (theme.dark) {\n      if (highlighted) {\n        return Color(theme.colors.primary).hex()\n      }\n      return theme.colors.backdrop\n    }\n\n    if (highlighted) {\n      return Color(theme.colors.primary).lighten(1).hex()\n    }\n    return theme.colors.surface\n  }, [highlighted, theme])\n\n  const color = React.useMemo<string>(() => {\n    if (highlighted && !theme.dark) {\n      return theme.colors.primary\n    }\n    return theme.colors.placeholder\n  }, [highlighted, theme])\n\n  return { backgroundColor, color }\n}\n\nexport function useInputColors(highlighted: boolean) {\n  const theme = useTheme()\n  const backgroundColor = React.useMemo<string>(() => {\n    if (theme.dark) {\n      if (highlighted) {\n        return Color(theme.colors.primary).hex()\n      }\n      return Color(theme.colors.surface).lighten(1.2).hex()\n    }\n\n    if (highlighted) {\n      return Color(theme.colors.primary).lighten(1).hex()\n    }\n    return Color(theme.colors.surface).darken(0.1).hex()\n  }, [highlighted, theme])\n\n  const color = React.useMemo<string>(() => {\n    if (highlighted && !theme.dark) {\n      return theme.colors.primary\n    }\n    return theme.colors.text\n  }, [highlighted, theme])\n\n  return { backgroundColor, color }\n}\n\nexport function toHourInputFormat(hours: number, is24Hour: boolean): number {\n  if (hours === 24) {\n    return 0\n  }\n  if (is24Hour) {\n    return hours\n  }\n  if (hours > 12) {\n    return hours - 12\n  }\n  return hours\n}\n\nexport function toHourOutputFormat(\n  newHours: number,\n  previousHours: number,\n  is24Hour: boolean\n): number {\n  if (is24Hour) {\n    return newHours\n  }\n  if (previousHours > 12 && newHours < 12) {\n    return newHours + 12\n  }\n  return newHours\n}\n","import * as React from 'react'\nimport { View, StyleSheet } from 'react-native'\nimport { Text } from 'react-native-paper'\nimport { circleSize } from './timeUtils'\nimport { useTextColorOnPrimary } from '../utils'\nimport { DisplayModeContext } from './TimePicker'\n\nfunction AnalogClockHours({\n  is24Hour,\n  hours,\n}: {\n  is24Hour: boolean\n  hours: number\n}) {\n  const { mode } = React.useContext(DisplayModeContext)\n  const outerRange = getHourNumbers(false, circleSize, 12, 12)\n  const innerRange = getHourNumbers(true, circleSize, 12, 12)\n  const color = useTextColorOnPrimary()\n\n  return (\n    <>\n      {outerRange.map((a, i) => (\n        <View\n          key={i}\n          pointerEvents=\"none\"\n          style={[\n            styles.outerHourRoot,\n            {\n              top: a[1] || 0,\n              left: a[0] || 0,\n            },\n          ]}\n        >\n          <View style={styles.outerHourInner}>\n            {/* Display 00 instead of 12 for AM hours */}\n            <Text style={hours === i + 1 ? { color } : null} selectable={false}>\n              {mode === 'AM' && i + 1 === 12 ? '00' : i + 1}\n            </Text>\n          </View>\n        </View>\n      ))}\n      {is24Hour\n        ? innerRange.map((a, i) => (\n            <View\n              key={i}\n              pointerEvents=\"none\"\n              style={[\n                styles.innerHourRoot,\n                {\n                  top: a[1] || 0,\n                  left: a[0] || 0,\n                },\n              ]}\n            >\n              <View style={styles.innerHourInner}>\n                <Text\n                  selectable={false}\n                  style={[\n                    styles.innerHourText,\n                    i + 13 === hours || (i + 13 === 24 && hours === 0)\n                      ? { color }\n                      : null,\n                  ]}\n                >\n                  {i + 13 === 24 ? '00' : i + 13}\n                </Text>\n              </View>\n            </View>\n          ))\n        : null}\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  outerHourRoot: {\n    position: 'absolute',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 20,\n    width: 50,\n    height: 50,\n    marginLeft: -25,\n    marginTop: -25,\n\n    borderRadius: 25,\n  },\n  outerHourInner: { borderRadius: 25 },\n  innerHourRoot: {\n    position: 'absolute',\n    zIndex: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 40,\n    height: 40,\n    marginLeft: -20,\n    marginTop: -20,\n    borderRadius: 20,\n  },\n  innerHourInner: { borderRadius: 20 },\n  innerHourText: { fontSize: 13 },\n})\n\nfunction getHourNumbers(\n  is24Hour: boolean,\n  size: number,\n  count: number,\n  arrayLength: number\n) {\n  let angle = 0\n  let step = (2 * Math.PI) / count\n  let radius = size / (is24Hour ? 4 : 2.5)\n\n  angle = (-90 * Math.PI) / 180 + Math.PI / 6\n\n  return Array(arrayLength)\n    .fill(true)\n    .map(() => {\n      let x = Math.round(size / 2 + radius * Math.cos(angle))\n      let y = Math.round(size / 2 + radius * Math.sin(angle))\n      angle += step\n      return [x, y]\n    })\n}\n\nexport default React.memo(AnalogClockHours)\n","import * as React from 'react'\nimport { Animated, StyleSheet, View } from 'react-native'\nimport { clockTypes, PossibleClockTypes } from './timeUtils'\n\nexport default function AnimatedClockSwitcher({\n  focused,\n  hours,\n  minutes,\n}: {\n  focused: PossibleClockTypes\n  hours: any\n  minutes: any\n}) {\n  const collapsed = focused === clockTypes.hours\n  const animatedCollapsed = React.useRef<Animated.Value>(\n    new Animated.Value(collapsed ? 1 : 0)\n  )\n  React.useEffect(() => {\n    Animated.timing(animatedCollapsed.current, {\n      toValue: collapsed ? 1 : 0,\n      duration: 250,\n      useNativeDriver: true,\n    }).start()\n  }, [collapsed])\n\n  return (\n    <View style={StyleSheet.absoluteFill}>\n      <Animated.View\n        pointerEvents={collapsed ? 'auto' : 'none'}\n        style={[\n          StyleSheet.absoluteFill,\n          {\n            opacity: animatedCollapsed.current,\n            transform: [\n              {\n                scale: animatedCollapsed.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [0.95, 1],\n                }),\n              },\n            ],\n          },\n        ]}\n      >\n        {hours}\n      </Animated.View>\n      <Animated.View\n        pointerEvents={collapsed ? 'none' : 'auto'}\n        style={[\n          StyleSheet.absoluteFill,\n          {\n            opacity: animatedCollapsed.current.interpolate({\n              inputRange: [0, 1],\n              outputRange: [1, 0],\n            }),\n            transform: [\n              {\n                scale: animatedCollapsed.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [1, 0.95],\n                }),\n              },\n            ],\n          },\n        ]}\n      >\n        {minutes}\n      </Animated.View>\n    </View>\n  )\n}\n","import * as React from 'react'\nimport { View, StyleSheet } from 'react-native'\nimport { Text } from 'react-native-paper'\nimport { circleSize } from './timeUtils'\nimport { useTextColorOnPrimary } from '../utils'\n\nfunction AnalogClockMinutes({ minutes }: { minutes: number }) {\n  const range = getMinuteNumbers(circleSize, 12)\n  const color = useTextColorOnPrimary()\n  return (\n    <>\n      {range.map((a, i) => {\n        const currentMinutes = i * 5\n        const isZero = currentMinutes === 0\n        let isCurrent =\n          currentMinutes - 1 <= minutes && currentMinutes + 1 >= minutes\n        if (isZero) {\n          isCurrent = minutes >= 59 || currentMinutes + 1 >= minutes\n        }\n        return (\n          <View\n            key={i}\n            pointerEvents=\"none\"\n            style={[\n              styles.outerHourRoot,\n              {\n                top: a[1] || 0,\n                left: a[0] || 0,\n              },\n            ]}\n          >\n            <View style={styles.outerHourInner}>\n              <Text style={isCurrent ? { color } : null} selectable={false}>\n                {isZero ? '00' : currentMinutes}\n              </Text>\n            </View>\n          </View>\n        )\n      })}\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  outerHourRoot: {\n    position: 'absolute',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 20,\n    width: 50,\n    height: 50,\n    marginLeft: -25,\n    marginTop: -25,\n\n    borderRadius: 25,\n  },\n  outerHourInner: { borderRadius: 25 },\n  innerHourRoot: {\n    position: 'absolute',\n    zIndex: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 40,\n    height: 40,\n    marginLeft: -20,\n    marginTop: -20,\n    borderRadius: 20,\n  },\n  innerHourInner: { borderRadius: 20 },\n  innerHourText: { fontSize: 13 },\n  textWhite: { color: '#fff' },\n})\n\nfunction getMinuteNumbers(size: number, count: number) {\n  let angle = 0\n  let step = (2 * Math.PI) / count\n  let radius = size / 2.5\n\n  angle = angle = (-90 * Math.PI) / 180\n\n  return Array(12)\n    .fill(true)\n    .map(() => {\n      let x = Math.round(size / 2 + radius * Math.cos(angle))\n      let y = Math.round(size / 2 + radius * Math.sin(angle))\n      angle += step\n      return [x, y]\n    })\n}\n\nexport default React.memo(AnalogClockMinutes)\n","import Color from 'color'\nimport {\n  GestureResponderEvent,\n  PanResponder,\n  StyleSheet,\n  View,\n} from 'react-native'\nimport { useTheme } from 'react-native-paper'\nimport {\n  circleSize,\n  clockTypes,\n  getAngle,\n  getHours,\n  getHourType,\n  getMinutes,\n  PossibleClockTypes,\n} from './timeUtils'\nimport * as React from 'react'\n\nimport { useLatest } from '../utils'\nimport AnalogClockHours from './AnalogClockHours'\n\nimport AnimatedClockSwitcher from './AnimatedClockSwitcher'\nimport AnalogClockMinutes from './AnalogClockMinutes'\nimport { DisplayModeContext } from './TimePicker'\n\nfunction AnalogClock({\n  hours,\n  minutes,\n  focused,\n  is24Hour,\n  onChange,\n}: {\n  hours: number\n  minutes: number\n  focused: PossibleClockTypes\n  is24Hour: boolean\n  onChange: ({\n    hours,\n    minutes,\n    focused,\n  }: {\n    hours: number\n    minutes: number\n    focused?: undefined | PossibleClockTypes\n  }) => any\n}) {\n  const theme = useTheme()\n  const { mode } = React.useContext(DisplayModeContext)\n  // used to make pointer shorter if hours are selected and above 12\n  const shortPointer = (hours === 0 || hours > 12) && is24Hour\n\n  const clockRef = React.useRef<View | null>(null)\n\n  // Hooks are nice, sometimes... :-)..\n  // We need the latest values, since the onPointerMove uses a closure to the function\n  const hoursRef = useLatest(hours)\n  const onChangeRef = useLatest(onChange)\n  const minutesRef = useLatest(minutes)\n  const focusedRef = useLatest(focused)\n  const is24HourRef = useLatest(is24Hour)\n  const modeRef = useLatest(mode)\n\n  const onPointerMove = React.useCallback(\n    (e: GestureResponderEvent, final: boolean) => {\n      let x = e.nativeEvent.locationX\n      let y = e.nativeEvent.locationY\n\n      let angle = getAngle(x, y, circleSize)\n\n      if (focusedRef.current === clockTypes.hours) {\n        let hours24 = is24HourRef.current\n        let previousHourType = getHourType(hoursRef.current)\n        let pickedHours = getHours(angle, previousHourType)\n\n        let hours12AndPm = !hours24 && modeRef.current === 'PM'\n        // Avoiding the \"24h\"\n        // Should be 12h for 12 hours and PM mode\n        if ((hours12AndPm || hours24) && pickedHours + 12 < 24) {\n          pickedHours += 12\n        }\n\n        if (pickedHours === 24) {\n          pickedHours = 0\n        }\n\n        if (hoursRef.current !== pickedHours || final) {\n          onChangeRef.current({\n            hours: pickedHours,\n            minutes: minutesRef.current,\n            focused: final ? clockTypes.minutes : undefined,\n          })\n        }\n      } else if (focusedRef.current === clockTypes.minutes) {\n        let pickedMinutes = getMinutes(angle)\n        if (minutesRef.current !== pickedMinutes) {\n          onChangeRef.current({\n            hours: hoursRef.current,\n            minutes: pickedMinutes,\n          })\n        }\n      }\n    },\n    [focusedRef, is24HourRef, hoursRef, onChangeRef, minutesRef, modeRef]\n  )\n\n  const panResponder = React.useRef(\n    PanResponder.create({\n      onPanResponderGrant: (e) => onPointerMove(e, false),\n      onPanResponderMove: (e) => onPointerMove(e, false),\n      onPanResponderRelease: (e) => onPointerMove(e, true),\n\n      onStartShouldSetPanResponder: returnTrue,\n      onStartShouldSetPanResponderCapture: () => false,\n      onMoveShouldSetPanResponder: returnTrue,\n      onMoveShouldSetPanResponderCapture: returnTrue,\n      onPanResponderTerminationRequest: returnTrue,\n      onShouldBlockNativeResponder: returnTrue,\n    })\n  ).current\n\n  const dynamicSize = focused === clockTypes.hours && shortPointer ? 33 : 0\n  const pointerNumber = focused === clockTypes.hours ? hours : minutes\n  const degreesPerNumber = focused === clockTypes.hours ? 30 : 6\n  return (\n    <View\n      ref={clockRef}\n      {...panResponder.panHandlers}\n      style={[\n        styles.clock,\n        {\n          backgroundColor: theme.dark\n            ? Color(theme.colors.surface).lighten(1.2).hex()\n            : Color(theme.colors.surface).darken(0.1).hex(),\n        },\n      ]}\n      // @ts-ignore -> https://github.com/necolas/react-native-web/issues/506\n      cursor={'pointer'}\n    >\n      <View\n        style={[\n          styles.line,\n          {\n            backgroundColor: theme.colors.primary,\n            transform: [\n              { rotate: -90 + pointerNumber * degreesPerNumber + 'deg' },\n              {\n                translateX: circleSize / 4 - 4 - dynamicSize / 2,\n              },\n            ],\n            width: circleSize / 2 - 4 - dynamicSize,\n          },\n        ]}\n        pointerEvents=\"none\"\n      >\n        <View\n          style={[styles.endPoint, { backgroundColor: theme.colors.primary }]}\n        />\n      </View>\n      <View\n        style={[StyleSheet.absoluteFill, styles.center]}\n        pointerEvents=\"none\"\n      >\n        <View\n          style={[\n            styles.middlePoint,\n            {\n              backgroundColor: theme.colors.primary,\n            },\n          ]}\n        />\n      </View>\n      <AnimatedClockSwitcher\n        focused={focused}\n        hours={<AnalogClockHours is24Hour={is24Hour} hours={hours} />}\n        minutes={<AnalogClockMinutes minutes={minutes} />}\n      />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  clock: {\n    height: circleSize,\n    width: circleSize,\n    position: 'relative',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: circleSize / 2,\n  },\n  middlePoint: {\n    borderRadius: 4,\n    height: 8,\n    width: 8,\n  },\n  center: { justifyContent: 'center', alignItems: 'center' },\n  endPoint: {\n    borderRadius: 15,\n    height: 30,\n    width: 30,\n    position: 'absolute',\n    right: 0,\n    bottom: -14,\n  },\n  line: {\n    position: 'absolute',\n\n    marginBottom: -1,\n    height: 2,\n    borderRadius: 4,\n  },\n})\n\nfunction returnTrue() {\n  return true\n}\n\nexport default React.memo(AnalogClock)\n","import * as React from 'react'\nimport { View, TextInput, TextInputProps, StyleSheet } from 'react-native'\nimport { useTheme, TouchableRipple } from 'react-native-paper'\n\nimport Color from 'color'\nimport {\n  inputTypes,\n  PossibleClockTypes,\n  PossibleInputTypes,\n  useInputColors,\n} from './timeUtils'\n\ninterface TimeInputProps\n  extends Omit<Omit<TextInputProps, 'value'>, 'onFocus'> {\n  value: number\n  clockType: PossibleClockTypes\n  onPress?: (type: PossibleClockTypes) => any\n  pressed: boolean\n  onChanged: (n: number) => any\n  inputType: PossibleInputTypes\n}\n\nfunction TimeInput(\n  {\n    value,\n    clockType,\n    pressed,\n    onPress,\n    onChanged,\n    inputType,\n    ...rest\n  }: TimeInputProps,\n  ref: any\n) {\n  const [controlledValue, setControlledValue] = React.useState<string>(\n    `${value}`\n  )\n\n  const onInnerChange = (text: string) => {\n    setControlledValue(text)\n    if (text !== '' && text !== '0') {\n      onChanged(Number(text))\n    }\n  }\n\n  React.useEffect(() => {\n    setControlledValue(`${value}`)\n  }, [value])\n\n  const theme = useTheme()\n  const [inputFocused, setInputFocused] = React.useState<boolean>(false)\n\n  const highlighted = inputType === inputTypes.picker ? pressed : inputFocused\n\n  const { color, backgroundColor } = useInputColors(highlighted)\n\n  let formattedValue = controlledValue\n  if (!inputFocused) {\n    formattedValue =\n      controlledValue.length === 1\n        ? `0${controlledValue}`\n        : `${controlledValue}`\n  }\n\n  return (\n    <View style={styles.root}>\n      <TextInput\n        ref={ref}\n        style={[\n          styles.input,\n          {\n            color,\n            backgroundColor,\n            borderRadius: theme.roundness,\n          },\n        ]}\n        value={formattedValue}\n        maxLength={2}\n        onFocus={() => setInputFocused(true)}\n        onBlur={() => setInputFocused(false)}\n        keyboardAppearance={theme.dark ? 'dark' : 'default'}\n        keyboardType=\"number-pad\"\n        onChangeText={onInnerChange}\n        {...rest}\n      />\n      {onPress && inputType === inputTypes.picker ? (\n        <TouchableRipple\n          style={[\n            StyleSheet.absoluteFill,\n            styles.buttonOverlay,\n            {\n              // backgroundColor: 'blue',\n              borderRadius: theme.roundness,\n            },\n          ]}\n          rippleColor={Color(theme.colors.primary).fade(0.7).hex()}\n          onPress={() => onPress(clockType)}\n          borderless={true}\n        >\n          <View />\n        </TouchableRipple>\n      ) : null}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  root: { position: 'relative', height: 80, width: 96 },\n  input: {\n    fontSize: 50,\n    textAlign: 'center',\n    textAlignVertical: 'center',\n    width: 96,\n    height: 80,\n  },\n  buttonOverlay: { overflow: 'hidden' },\n})\n\nexport default React.forwardRef(TimeInput)\n","import * as React from 'react'\nimport { View, StyleSheet } from 'react-native'\nimport { Text, TouchableRipple, useTheme } from 'react-native-paper'\nimport { useMemo } from 'react'\nimport Color from 'color'\nimport { useSwitchColors } from './timeUtils'\nimport { DisplayModeContext } from './TimePicker'\n\nexport default function AmPmSwitcher({\n  onChange,\n  hours,\n}: {\n  hours: number\n  onChange: (hours: number) => any\n}) {\n  const { setMode, mode } = React.useContext(DisplayModeContext)\n  const theme = useTheme()\n  const backgroundColor = useMemo<string>(() => {\n    if (theme.dark) {\n      return Color(theme.colors.surface).lighten(1.2).hex()\n    }\n    return Color(theme.colors.surface).darken(0.1).hex()\n  }, [theme])\n\n  const isAM = mode === 'AM'\n  return (\n    <View\n      style={[\n        styles.root,\n        {\n          borderColor: backgroundColor,\n          borderRadius: theme.roundness,\n        },\n      ]}\n    >\n      <SwitchButton\n        label=\"AM\"\n        onPress={() => {\n          setMode('AM')\n          if (hours - 12 >= 0) {\n            onChange(hours - 12)\n          }\n        }}\n        selected={isAM}\n        disabled={isAM}\n      />\n      <View style={[styles.switchSeparator, { backgroundColor }]} />\n      <SwitchButton\n        label=\"PM\"\n        onPress={() => {\n          setMode('PM')\n          if (hours + 12 <= 24) {\n            onChange(hours + 12)\n          }\n        }}\n        selected={!isAM}\n        disabled={!isAM}\n      />\n    </View>\n  )\n}\n\nfunction SwitchButton({\n  label,\n  onPress,\n  selected,\n  disabled,\n}: {\n  label: string\n  onPress: (() => any) | undefined\n  selected: boolean\n  disabled: boolean\n}) {\n  const theme = useTheme()\n  const { backgroundColor, color } = useSwitchColors(selected)\n\n  return (\n    <TouchableRipple\n      onPress={onPress}\n      style={styles.switchButton}\n      accessibilityLabel={label}\n      // @ts-ignore old React Native versions\n      accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n      // @ts-ignore old React Native versions\n      accessibilityComponentType=\"button\"\n      accessibilityRole=\"button\"\n      accessibilityState={{ disabled }}\n      disabled={disabled}\n    >\n      <View style={[styles.switchButtonInner, { backgroundColor }]}>\n        <Text\n          selectable={false}\n          style={[\n            {\n              ...theme.fonts.medium,\n              color: color,\n            },\n          ]}\n        >\n          {label}\n        </Text>\n      </View>\n    </TouchableRipple>\n  )\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    width: 50,\n    height: 80,\n    borderWidth: 1,\n    overflow: 'hidden',\n  },\n  switchSeparator: {\n    height: 1,\n    width: 48,\n  },\n  switchButton: {\n    flex: 1,\n  },\n  switchButtonInner: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n})\n","// @typescript-eslint/no-unused-vars\n// WORK IN PROGRESS\n\nimport * as React from 'react'\nimport {\n  View,\n  StyleSheet,\n  useWindowDimensions,\n  TextInput as TextInputNative,\n} from 'react-native'\nimport { useTheme } from 'react-native-paper'\n\nimport {\n  clockTypes,\n  PossibleClockTypes,\n  PossibleInputTypes,\n  toHourInputFormat,\n  toHourOutputFormat,\n} from './timeUtils'\nimport TimeInput from './TimeInput'\nimport AmPmSwitcher from './AmPmSwitcher'\nimport { useLatest } from '../utils'\n\nfunction TimeInputs({\n  hours,\n  minutes,\n  onFocusInput,\n  focused,\n  inputType,\n  onChange,\n  is24Hour,\n}: {\n  inputType: PossibleInputTypes\n  focused: PossibleClockTypes\n  hours: number\n  minutes: number\n  onFocusInput: (type: PossibleClockTypes) => any\n  onChange: ({\n    hours,\n    minutes,\n    focused,\n  }: {\n    hours: number\n    minutes: number\n    focused?: undefined | PossibleClockTypes\n  }) => any\n  is24Hour: boolean\n}) {\n  const startInput = React.useRef<TextInputNative | null>(null)\n  const endInput = React.useRef<TextInputNative | null>(null)\n  const dimensions = useWindowDimensions()\n  const isLandscape = dimensions.width > dimensions.height\n  const theme = useTheme()\n\n  const onSubmitStartInput = React.useCallback(() => {\n    if (endInput.current) {\n      endInput.current.focus()\n    }\n  }, [endInput])\n\n  const onSubmitEndInput = React.useCallback(() => {\n    // TODO: close modal and persist time\n  }, [])\n\n  const minutesRef = useLatest(minutes)\n  const onChangeHours = React.useCallback(\n    (newHours: number) => {\n      onChange({\n        hours: newHours,\n        minutes: minutesRef.current,\n        focused: clockTypes.hours,\n      })\n    },\n    [onChange, minutesRef]\n  )\n\n  return (\n    <View\n      style={[\n        styles.inputContainer,\n        isLandscape && styles.inputContainerLandscape,\n      ]}\n    >\n      <TimeInput\n        ref={startInput}\n        placeholder={'00'}\n        value={toHourInputFormat(hours, is24Hour)}\n        clockType={clockTypes.hours}\n        pressed={focused === clockTypes.hours}\n        onPress={onFocusInput}\n        inputType={inputType}\n        returnKeyType={'next'}\n        onSubmitEditing={onSubmitStartInput}\n        blurOnSubmit={false}\n        onChanged={(newHoursFromInput) => {\n          let newHours = toHourOutputFormat(newHoursFromInput, hours, is24Hour)\n          if (newHoursFromInput > 24) {\n            newHours = 24\n          }\n          onChange({\n            hours: newHours,\n            minutes,\n          })\n        }}\n        // onChangeText={onChangeStartInput}\n      />\n      <View style={styles.hoursAndMinutesSeparator}>\n        <View style={styles.spaceDot} />\n        <View style={[styles.dot, { backgroundColor: theme.colors.text }]} />\n        <View style={styles.betweenDot} />\n        <View style={[styles.dot, { backgroundColor: theme.colors.text }]} />\n        <View style={styles.spaceDot} />\n      </View>\n      <TimeInput\n        ref={endInput}\n        placeholder={'00'}\n        value={minutes}\n        clockType={clockTypes.minutes}\n        pressed={focused === clockTypes.minutes}\n        onPress={onFocusInput}\n        inputType={inputType}\n        onSubmitEditing={onSubmitEndInput}\n        onChanged={(newMinutesFromInput) => {\n          let newMinutes = newMinutesFromInput\n          if (newMinutesFromInput > 60) {\n            newMinutes = 60\n          }\n          onChange({\n            hours,\n            minutes: newMinutes,\n          })\n        }}\n      />\n      {!is24Hour && (\n        <>\n          <View style={styles.spaceBetweenInputsAndSwitcher} />\n          <AmPmSwitcher hours={hours} onChange={onChangeHours} />\n        </>\n      )}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  spaceBetweenInputsAndSwitcher: { width: 12 },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  inputContainerLandscape: {\n    flex: 1,\n  },\n  hoursAndMinutesSeparator: {\n    fontSize: 65,\n    width: 24,\n    alignItems: 'center',\n  },\n  spaceDot: {\n    flex: 1,\n  },\n  dot: {\n    width: 7,\n    height: 7,\n    borderRadius: 7 / 2,\n  },\n  betweenDot: {\n    height: 12,\n  },\n})\n\nexport default React.memo(TimeInputs)\n","import * as React from 'react'\nimport { View, StyleSheet, useWindowDimensions } from 'react-native'\n\nimport {\n  inputTypes,\n  PossibleClockTypes,\n  PossibleInputTypes,\n  toHourInputFormat,\n  toHourOutputFormat,\n} from './timeUtils'\n\nimport AnalogClock from './AnalogClock'\nimport { circleSize } from './timeUtils'\nimport TimeInputs from './TimeInputs'\n\nexport const DisplayModeContext = React.createContext<{\n  mode: 'AM' | 'PM' | undefined\n  setMode: React.Dispatch<React.SetStateAction<'AM' | 'PM' | undefined>>\n}>({ mode: 'AM', setMode: () => {} })\n\ntype onChangeFunc = ({\n  hours,\n  minutes,\n  focused,\n}: {\n  hours: number\n  minutes: number\n  focused?: undefined | PossibleClockTypes\n}) => any\n\nfunction TimePicker({\n  hours,\n  minutes,\n  onFocusInput,\n  focused,\n  inputType,\n  onChange,\n  locale,\n}: {\n  locale?: undefined | string\n  inputType: PossibleInputTypes\n  focused: PossibleClockTypes\n  hours: number\n  minutes: number\n  onFocusInput: (type: PossibleClockTypes) => any\n  onChange: onChangeFunc\n}) {\n  const [displayMode, setDisplayMode] = React.useState<'AM' | 'PM' | undefined>(\n    undefined\n  )\n  const dimensions = useWindowDimensions()\n  const isLandscape = dimensions.width > dimensions.height\n\n  // method to check whether we have 24 hours in clock or 12\n  const is24Hour = React.useMemo(() => {\n    const formatter = new Intl.DateTimeFormat(locale, {\n      hour: '2-digit',\n      minute: '2-digit',\n      timeZone: 'UTC',\n    })\n    const formatted = formatter.format(new Date(Date.UTC(2020, 1, 1, 23)))\n    return formatted.includes('23')\n  }, [locale])\n\n  // Initialize display Mode according the hours value\n  React.useEffect(() => {\n    if (hours >= 12) {\n      setDisplayMode('PM')\n    } else {\n      setDisplayMode('AM')\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const onInnerChange = React.useCallback<onChangeFunc>(\n    (params) => {\n      params.hours = toHourOutputFormat(params.hours, hours, is24Hour)\n      onChange(params)\n    },\n    [onChange, hours, is24Hour]\n  )\n\n  return (\n    <DisplayModeContext.Provider\n      value={{ mode: displayMode, setMode: setDisplayMode }}\n    >\n      <View style={isLandscape ? styles.rootLandscape : styles.rootPortrait}>\n        <TimeInputs\n          inputType={inputType}\n          hours={hours}\n          minutes={minutes}\n          is24Hour={is24Hour}\n          onChange={onChange}\n          onFocusInput={onFocusInput}\n          focused={focused}\n        />\n        {inputType === inputTypes.picker ? (\n          <View style={styles.clockContainer}>\n            <AnalogClock\n              hours={toHourInputFormat(hours, is24Hour)}\n              minutes={minutes}\n              focused={focused}\n              is24Hour={is24Hour}\n              onChange={onInnerChange}\n            />\n          </View>\n        ) : null}\n      </View>\n    </DisplayModeContext.Provider>\n  )\n}\n\nconst styles = StyleSheet.create({\n  rootLandscape: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: 24 * 3 + 96 * 2 + 52 + circleSize,\n  },\n  rootPortrait: {},\n  clockContainer: { paddingTop: 36, paddingLeft: 12, paddingRight: 12 },\n})\n\nexport default React.memo(TimePicker)\n","import * as React from 'react'\nimport {\n  Modal,\n  StyleSheet,\n  View,\n  Text,\n  Animated,\n  TouchableWithoutFeedback,\n  KeyboardAvoidingView,\n} from 'react-native'\n\nimport { Button, IconButton, overlay, useTheme } from 'react-native-paper'\nimport TimePicker from './TimePicker'\nimport {\n  clockTypes,\n  inputTypeIcons,\n  inputTypes,\n  PossibleClockTypes,\n  PossibleInputTypes,\n  reverseInputTypes,\n} from './timeUtils'\n\nconst supportedOrientations: any[] = [\n  'portrait',\n  'portrait-upside-down',\n  'landscape',\n  'landscape-left',\n  'landscape-right',\n]\n\nexport function TimePickerModal({\n  visible,\n  onDismiss,\n  onConfirm,\n  hours,\n  minutes,\n  label = 'Select time',\n  cancelLabel = 'Cancel',\n  confirmLabel = 'Ok',\n  animationType = 'none',\n  locale,\n}: {\n  locale?: undefined | string\n  label?: string\n  cancelLabel?: string\n  confirmLabel?: string\n  hours?: number | undefined\n  minutes?: number | undefined\n  visible: boolean | undefined\n  onDismiss: () => any\n  onConfirm: ({ hours, minutes }: { hours: number; minutes: number }) => any\n  animationType?: 'slide' | 'fade' | 'none'\n}) {\n  const theme = useTheme()\n\n  const [inputType, setInputType] = React.useState<PossibleInputTypes>(\n    inputTypes.picker\n  )\n  const [focused, setFocused] = React.useState<PossibleClockTypes>(\n    clockTypes.hours\n  )\n  const [localHours, setLocalHours] = React.useState<number>(getHours(hours))\n  const [localMinutes, setLocalMinutes] = React.useState<number>(\n    getMinutes(minutes)\n  )\n\n  React.useEffect(() => {\n    setLocalHours(getHours(hours))\n  }, [setLocalHours, hours])\n\n  React.useEffect(() => {\n    setLocalMinutes(getMinutes(minutes))\n  }, [setLocalMinutes, minutes])\n\n  const onFocusInput = React.useCallback(\n    (type: PossibleClockTypes) => setFocused(type),\n    []\n  )\n  const onChange = React.useCallback(\n    (params: {\n      focused?: PossibleClockTypes | undefined\n      hours: number\n      minutes: number\n    }) => {\n      if (params.focused) {\n        setFocused(params.focused)\n      }\n\n      setLocalHours(params.hours)\n      setLocalMinutes(params.minutes)\n    },\n    [setFocused, setLocalHours, setLocalMinutes]\n  )\n  return (\n    <Modal\n      animationType={animationType}\n      transparent={true}\n      visible={visible}\n      onRequestClose={onDismiss}\n      presentationStyle=\"overFullScreen\"\n      supportedOrientations={supportedOrientations}\n      //@ts-ignore\n      statusBarTranslucent={true}\n    >\n      <>\n        <TouchableWithoutFeedback onPress={onDismiss}>\n          <View\n            style={[\n              StyleSheet.absoluteFill,\n              styles.modalBackground,\n              { backgroundColor: theme.colors.backdrop },\n            ]}\n          />\n        </TouchableWithoutFeedback>\n\n        <View\n          style={[StyleSheet.absoluteFill, styles.modalRoot]}\n          pointerEvents=\"box-none\"\n        >\n          <KeyboardAvoidingView\n            style={styles.keyboardView}\n            behavior={'padding'}\n          >\n            <Animated.View\n              style={[\n                styles.modalContent,\n                {\n                  backgroundColor: theme.dark\n                    ? overlay(10, theme.colors.surface)\n                    : theme.colors.surface,\n                  borderRadius: theme.roundness,\n                },\n              ]}\n            >\n              <View style={styles.labelContainer}>\n                <Text style={[styles.label, { color: theme.colors.text }]}>\n                  {label.toUpperCase()}\n                </Text>\n              </View>\n              <View style={styles.timePickerContainer}>\n                <TimePicker\n                  locale={locale}\n                  inputType={inputType}\n                  focused={focused}\n                  hours={localHours}\n                  minutes={localMinutes}\n                  onChange={onChange}\n                  onFocusInput={onFocusInput}\n                />\n              </View>\n              <View style={styles.bottom}>\n                <IconButton\n                  icon={inputTypeIcons[reverseInputTypes[inputType]]}\n                  onPress={() => setInputType(reverseInputTypes[inputType])}\n                  size={24}\n                  style={styles.inputTypeToggle}\n                  accessibilityLabel=\"toggle keyboard\"\n                />\n                <View style={styles.fill} />\n                <Button onPress={onDismiss}>{cancelLabel}</Button>\n                <Button\n                  onPress={() =>\n                    onConfirm({ hours: localHours, minutes: localMinutes })\n                  }\n                >\n                  {confirmLabel}\n                </Button>\n              </View>\n            </Animated.View>\n          </KeyboardAvoidingView>\n        </View>\n      </>\n    </Modal>\n  )\n}\n\nfunction getMinutes(minutes: number | undefined | null): number {\n  return minutes === undefined || minutes === null\n    ? new Date().getMinutes()\n    : minutes\n}\nfunction getHours(hours: number | undefined | null): number {\n  return hours === undefined || hours === null ? new Date().getHours() : hours\n}\n\nconst styles = StyleSheet.create({\n  modalRoot: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    flex: 1,\n  },\n  keyboardView: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    flex: 1,\n  },\n  modalBackground: {\n    flex: 1,\n  },\n  modalContent: {\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 5,\n    },\n    shadowOpacity: 0.34,\n    shadowRadius: 6.27,\n    elevation: 10,\n    minWidth: 287,\n  },\n  labelContainer: {\n    height: 28,\n    justifyContent: 'flex-end',\n    paddingLeft: 24,\n    paddingRight: 24,\n  },\n  label: {\n    letterSpacing: 1,\n    fontSize: 13,\n  },\n  timePickerContainer: { padding: 24 },\n  bottom: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8,\n  },\n  inputTypeToggle: { margin: 4 },\n  fill: { flex: 1 },\n})\n\nexport default React.memo(TimePickerModal)\n","import type { TranslationsType } from './utils'\n\nconst nl: TranslationsType = {\n  save: 'Opslaan',\n  selectSingle: 'Selecteer datum',\n  selectMultiple: 'Selecteer datums',\n  selectRange: 'Selecteer periode',\n  notAccordingToDateFormat: (inputFormat: string) =>\n    `Datumformaat moet ${inputFormat} zijn`,\n  mustBeHigherThan: 'Moet later dan',\n  mustBeLowerThan: 'Moet eerder dan',\n  mustBeBetween: 'Moet tussen',\n  dateIsDisabled: 'Deze dag mag niet',\n}\nexport default nl\n","import type { TranslationsType } from './utils'\n\nconst en: TranslationsType = {\n  save: 'Save',\n  selectSingle: 'Select date',\n  selectMultiple: 'Select dates',\n  selectRange: 'Select period',\n  notAccordingToDateFormat: (inputFormat: string) =>\n    `Date format must be ${inputFormat}`,\n  mustBeHigherThan: 'Must be later then',\n  mustBeLowerThan: 'Must be earlier then',\n  mustBeBetween: 'Must be between',\n  dateIsDisabled: 'Day is not allowed',\n}\nexport default en\n","import * as React from 'react'\nimport {\n  StyleSheet,\n  ScrollView,\n  View,\n  Linking,\n  Image,\n  Animated,\n  useColorScheme,\n} from 'react-native'\n\nimport {\n  Title,\n  Button,\n  Text,\n  Provider as PaperProvider,\n  DefaultTheme,\n  DarkTheme,\n  useTheme,\n  overlay,\n  Paragraph,\n  Portal,\n} from 'react-native-paper'\n\nimport {\n  DatePickerModal,\n  DatePickerModalContent,\n  TimePickerModal,\n  DatePickerInput,\n  // @ts-ignore TODO: try to fix expo to work with local library\n} from 'react-native-paper-dates'\n\nfunction App() {\n  const theme = useTheme()\n  const dateFormatter = new Intl.DateTimeFormat(undefined, {\n    day: 'numeric',\n    month: 'long',\n    year: 'numeric',\n  })\n  const timeFormatter = new Intl.DateTimeFormat(undefined, {\n    hour: '2-digit',\n    minute: '2-digit',\n    hour12: false,\n  })\n  const [inputDate, setInputDate] = React.useState<Date | undefined>(undefined)\n\n  const [date, setDate] = React.useState<Date | undefined>(undefined)\n  const [dates, setDates] = React.useState<Date[] | undefined>()\n  const [range, setRange] = React.useState<{\n    startDate: Date | undefined\n    endDate: Date | undefined\n  }>({ startDate: undefined, endDate: undefined })\n  const [time, setTime] = React.useState<{\n    hours: number | undefined\n    minutes: number | undefined\n  }>({ hours: undefined, minutes: undefined })\n  const [timeOpen, setTimeOpen] = React.useState(false)\n  const [rangeOpen, setRangeOpen] = React.useState(false)\n\n  const [singleOpen, setSingleOpen] = React.useState(false)\n  const [customOpen, setCustomOpen] = React.useState(false)\n  const onDismissTime = React.useCallback(() => {\n    setTimeOpen(false)\n  }, [setTimeOpen])\n  const [multiOpen, setMultiOpen] = React.useState(false)\n\n  const onDismissRange = React.useCallback(() => {\n    setRangeOpen(false)\n  }, [setRangeOpen])\n\n  const onDismissSingle = React.useCallback(() => {\n    setSingleOpen(false)\n  }, [setSingleOpen])\n\n  const onDismissMulti = React.useCallback(() => {\n    setMultiOpen(false)\n  }, [])\n\n  const onDismissCustom = React.useCallback(() => {\n    setCustomOpen(false)\n  }, [setCustomOpen])\n\n  const onChangeRange = React.useCallback(\n    ({ startDate, endDate }) => {\n      setRangeOpen(false)\n      setRange({ startDate, endDate })\n    },\n    [setRangeOpen, setRange]\n  )\n\n  const onChangeSingle = React.useCallback(\n    (params) => {\n      setSingleOpen(false)\n      setDate(params.date)\n    },\n    [setSingleOpen, setDate]\n  )\n\n  const onChangeMulti = React.useCallback((params) => {\n    setMultiOpen(false)\n    setDates(params.dates)\n    console.log('[on-change-multi]', params)\n  }, [])\n\n  const onConfirmTime = React.useCallback(\n    ({ hours, minutes }) => {\n      setTimeOpen(false)\n      setTime({ hours, minutes })\n    },\n    [setTimeOpen, setTime]\n  )\n\n  // generate date from time\n  let timeDate = new Date()\n  time.hours !== undefined && timeDate.setHours(time.hours)\n  time.minutes !== undefined && timeDate.setMinutes(time.minutes)\n\n  const backgroundColor =\n    theme.dark && theme.mode === 'adaptive'\n      ? overlay(3, theme.colors.surface)\n      : (theme.colors.surface as any)\n\n  const pastDate = new Date(new Date().setDate(new Date().getDate() - 5))\n  const futureDate = new Date(new Date().setDate(new Date().getDate() + 5))\n\n  const locale = 'en'\n  return (\n    <>\n      <ScrollView\n        style={[\n          styles.root,\n          {\n            backgroundColor: theme.colors.background,\n          },\n        ]}\n      >\n        <View style={styles.content}>\n          <View style={styles.titleContainer}>\n            <Image source={require('./schedule.png')} style={styles.logo} />\n            <Title>react-native-paper-dates</Title>\n          </View>\n\n          <Paragraph>\n            Smooth and fast cross platform Material Design date picker for React\n            Native Paper brought to you by{' '}\n            <Text\n              onPress={() => Linking.openURL('https://webridge.nl')}\n              style={styles.underline}\n            >\n              webRidge\n            </Text>\n          </Paragraph>\n          <Paragraph>Example version: 0.4.1</Paragraph>\n        </View>\n        <View style={styles.content}>\n          <Button\n            uppercase={false}\n            mode=\"contained\"\n            icon=\"github\"\n            style={styles.twitterButton}\n            onPress={() =>\n              Linking.openURL(\n                'https://github.com/web-ridge/react-native-paper-dates'\n              )\n            }\n          >\n            GitHub\n          </Button>\n          <TwitterFollowButton userName={'RichardLindhout'} />\n          <TwitterFollowButton userName={'web_ridge'} />\n        </View>\n        <Animated.View\n          style={[\n            styles.content,\n            styles.contentShadow,\n            {\n              backgroundColor,\n            },\n          ]}\n        >\n          {/*<View style={styles.switchContainer}>*/}\n          {/*  <Text style={[styles.switchLabel, { ...theme.fonts.medium }]}>*/}\n          {/*    Dark mode (does not wo*/}\n          {/*  </Text>*/}\n          {/*  <View style={styles.switchSpace} />*/}\n          {/*  <Switch value={dark} onValueChange={onToggleDarkMode} />*/}\n          {/*</View>*/}\n          {/*<Enter />*/}\n          {/*<Enter />*/}\n          {/*<Enter />*/}\n          {/*<Enter />*/}\n          <View>\n            <Row>\n              <Label>Input</Label>\n\n              <DatePickerInput\n                locale={locale}\n                value={inputDate}\n                onChange={setInputDate}\n                inputMode=\"start\"\n              />\n            </Row>\n            <Row>\n              <Label>Date</Label>\n              <Text>{date ? dateFormatter.format(date) : '-'}</Text>\n            </Row>\n            <Row>\n              <Label>Range</Label>\n              <Text>\n                {[\n                  range.startDate ? dateFormatter.format(range.startDate) : '',\n                  range.endDate ? dateFormatter.format(range.endDate) : '',\n                ].join(' - ')}\n              </Text>\n            </Row>\n            <Row>\n              <Label>Time</Label>\n              <Text>\n                {time && time.hours !== undefined && time.minutes !== undefined\n                  ? timeFormatter.format(timeDate)\n                  : '-'}\n              </Text>\n            </Row>\n            <Row>\n              <Label>Dates</Label>\n              <Text>\n                {dates\n                  ?.map((d) => dateFormatter.format(d))\n                  .filter(Boolean)\n                  .join(', ') || '-'}\n              </Text>\n            </Row>\n          </View>\n          <Enter />\n          <Enter />\n          <View style={styles.buttons}>\n            <Button\n              onPress={() => setSingleOpen(true)}\n              uppercase={false}\n              mode=\"outlined\"\n              style={styles.pickButton}\n            >\n              Pick single date\n            </Button>\n            <View style={styles.buttonSeparator} />\n            <Button\n              onPress={() => setMultiOpen(true)}\n              uppercase={false}\n              mode=\"outlined\"\n              style={styles.pickButton}\n            >\n              Pick multiple dates\n            </Button>\n            <View style={styles.buttonSeparator} />\n            <Button\n              onPress={() => setRangeOpen(true)}\n              uppercase={false}\n              mode=\"outlined\"\n              style={styles.pickButton}\n            >\n              Pick range\n            </Button>\n\n            <View style={styles.buttonSeparator} />\n            <Button\n              onPress={() => setTimeOpen(true)}\n              uppercase={false}\n              mode=\"outlined\"\n              style={styles.pickButton}\n            >\n              Pick time\n            </Button>\n            <View style={styles.buttonSeparator} />\n            <Button\n              onPress={() => setCustomOpen(true)}\n              uppercase={false}\n              mode=\"outlined\"\n              style={styles.pickButton}\n            >\n              Custom modal\n            </Button>\n          </View>\n          <Enter />\n        </Animated.View>\n\n        <Enter />\n        <Enter />\n        <Enter />\n      </ScrollView>\n      <Portal>\n        {customOpen ? (\n          <View style={[StyleSheet.absoluteFill, styles.customModal]}>\n            <DatePickerModalContent\n              locale={locale}\n              mode=\"range\"\n              onDismiss={onDismissCustom}\n              startDate={range.startDate}\n              endDate={range.endDate}\n              onConfirm={onChangeRange}\n            />\n          </View>\n        ) : null}\n      </Portal>\n\n      <DatePickerModal\n        locale={locale}\n        mode=\"range\"\n        visible={rangeOpen}\n        onDismiss={onDismissRange}\n        startDate={range.startDate}\n        endDate={range.endDate}\n        onConfirm={onChangeRange}\n        // locale={'nl'} // optional\n        // saveLabel=\"Save\" // optional\n        // label=\"Select period\" // optional\n        // startLabel=\"From\" // optional\n        // endLabel=\"To\" // optional\n        // animationType=\"slide\" // optional, default is slide on ios/android and none on web\n      />\n\n      <DatePickerModal\n        locale={locale}\n        mode=\"single\"\n        visible={singleOpen}\n        onDismiss={onDismissSingle}\n        date={date}\n        onConfirm={onChangeSingle}\n        validRange={{\n          startDate: pastDate,\n          disabledDates: [futureDate],\n          // startDate: new Date(2021, 1, 2), // optional\n          // endDate: new Date(), // optional\n        }}\n        // saveLabel=\"Save\" // optional\n        // label=\"Select date\" // optional\n        // animationType=\"slide\" // optional, default is 'slide' on ios/android and 'none' on web\n      />\n\n      <DatePickerModal\n        locale={locale}\n        mode=\"multiple\"\n        visible={multiOpen}\n        onDismiss={onDismissMulti}\n        dates={dates}\n        validRange={{\n          startDate: new Date(),\n        }}\n        onConfirm={onChangeMulti}\n        // moreLabel=\"more\" // optional, if multiple are selected this will show if we can't show all dates\n        // onChange={onChangeMulti}\n        // saveLabel=\"Save\" // optional\n        // label=\"Select date\" // optional\n        // animationType=\"slide\" // optional, default is 'slide' on ios/android and 'none' on web\n      />\n\n      <TimePickerModal\n        locale={locale}\n        visible={timeOpen}\n        onDismiss={onDismissTime}\n        onConfirm={onConfirmTime}\n        hours={time.hours} // optional, default: current hours\n        minutes={time.minutes} // optional, default: current minutes\n        // label=\"Select time\" // optional, default 'Select time'\n        // cancelLabel=\"Cancel\" // optional, default: 'Cancel'\n        // confirmLabel=\"Ok\" // optional, default: 'Ok'\n        // animationType=\"fade\" // optional, default is 'none'\n      />\n    </>\n  )\n}\n\nfunction Enter() {\n  return <View style={styles.enter} />\n}\n\nfunction Row({ children }: { children: any }) {\n  return <View style={styles.row}>{children}</View>\n}\n\nfunction Label({ children }: { children: string }) {\n  const theme = useTheme()\n  return (\n    <Text style={[styles.label, { ...theme.fonts.medium }]}>{children}</Text>\n  )\n}\n\nexport default function AppWithProviders() {\n  const dark = useColorScheme() === 'dark'\n\n  return (\n    <PaperProvider\n      theme={\n        dark\n          ? {\n              ...DarkTheme,\n              roundness: 10,\n              colors: {\n                ...DarkTheme.colors,\n                // primary: '#F59E00',\n                // accent: '#FBBE5E',\n              },\n            }\n          : {\n              ...DefaultTheme,\n              roundness: 10,\n              colors: {\n                ...DefaultTheme.colors,\n                // primary: '#F59E00',\n                // accent: '#FBBE5E',\n              },\n            }\n      }\n    >\n      <App />\n    </PaperProvider>\n  )\n}\n\nfunction TwitterFollowButton({ userName }: { userName: string }) {\n  return (\n    <Button\n      uppercase={false}\n      mode=\"outlined\"\n      icon=\"twitter\"\n      style={styles.twitterButton}\n      onPress={() => Linking.openURL(`https://twitter.com/${userName}`)}\n    >\n      @{userName}\n    </Button>\n  )\n}\n\nconst styles = StyleSheet.create({\n  underline: { textDecorationLine: 'underline' },\n  logo: { width: 56, height: 56, marginRight: 24 },\n  titleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 12,\n  },\n  twitterButton: { marginBottom: 16 },\n  root: { flex: 1 },\n  content: {\n    width: '100%',\n    maxWidth: 500,\n    marginTop: 24,\n    padding: 24,\n    alignSelf: 'center',\n    // flex: 1,\n  },\n  contentInline: {\n    padding: 0,\n    height: 600,\n  },\n  contentShadow: {\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.15,\n    shadowRadius: 3.84,\n    elevation: 3,\n  },\n  switchContainer: {\n    flexDirection: 'row',\n    marginTop: 24,\n    alignItems: 'center',\n  },\n  switchSpace: { flex: 1 },\n  switchLabel: { fontSize: 16 },\n  buttons: { flexDirection: 'row', flexWrap: 'wrap', marginTop: 24 },\n  pickButton: { marginTop: 6 },\n  buttonSeparator: { width: 6 },\n  enter: { height: 12 },\n  label: { width: 100, fontSize: 16 },\n  row: { paddingTop: 12, paddingBottom: 12, flexDirection: 'row' },\n  customModal: {\n    top: 12,\n    left: 12,\n    right: 12,\n    bottom: 12,\n    // borderTopRightRadius: 20,\n    // borderBottomRightRadius: 20,\n    backgroundColor: '#fff',\n    overflow: 'hidden',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n\n    elevation: 5,\n  },\n})\n","import {\n  en,\n  nl,\n  registerTranslation,\n  // @ts-ignore TODO: try to fix expo to work with local library\n} from 'react-native-paper-dates'\nregisterTranslation('en', en)\nregisterTranslation('nl', nl)\n\nimport App from './App'\nexport default App\n","import { registerRootComponent } from 'expo'\n\nimport Index from './src'\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(Index)\n"],"sourceRoot":""}